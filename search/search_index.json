{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UBC Lab BD - Documenta\u00e7\u00e3o","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o oficial do projeto UBC Lab BD. Este projeto est\u00e1 sendo desenvolvido pelo UBC Lab com foco em solu\u00e7\u00f5es de banco de dados e an\u00e1lise de dados.</p>"},{"location":"#sobre-o-projeto","title":"\ud83d\ude80 Sobre o Projeto","text":"<p>O UBC Lab BD \u00e9 uma iniciativa que visa desenvolver solu\u00e7\u00f5es inovadoras na \u00e1rea de banco de dados, proporcionando ferramentas e frameworks que facilitem o trabalho com grandes volumes de dados e an\u00e1lises complexas.</p>"},{"location":"#navegacao","title":"\ud83d\udcda Navega\u00e7\u00e3o","text":"<p>Esta documenta\u00e7\u00e3o est\u00e1 organizada nas seguintes se\u00e7\u00f5es:</p>"},{"location":"#sobre-o-projeto_1","title":"\ud83d\udcd6 Sobre o Projeto","text":"<ul> <li>Vis\u00e3o Geral: Entenda o escopo e prop\u00f3sito do projeto</li> <li>Objetivos: Conhe\u00e7a os objetivos principais e metas</li> <li>Arquitetura: Explore a arquitetura t\u00e9cnica da solu\u00e7\u00e3o</li> </ul>"},{"location":"#desenvolvimento","title":"\ud83d\udee0\ufe0f Desenvolvimento","text":"<ul> <li>Configura\u00e7\u00e3o do Ambiente: Como configurar seu ambiente de desenvolvimento</li> <li>Guia de Contribui\u00e7\u00e3o: Como contribuir para o projeto</li> <li>Padr\u00f5es de C\u00f3digo: Padr\u00f5es e boas pr\u00e1ticas adotadas</li> </ul>"},{"location":"#api","title":"\ud83d\udd17 API","text":"<ul> <li>Documenta\u00e7\u00e3o da API: Refer\u00eancia completa da API</li> <li>Exemplos: Exemplos pr\u00e1ticos de uso</li> </ul>"},{"location":"#deploy","title":"\ud83d\ude80 Deploy","text":"<ul> <li>Configura\u00e7\u00e3o: Configura\u00e7\u00f5es necess\u00e1rias para deploy</li> <li>Guia de Deploy: Passo a passo para fazer deploy da aplica\u00e7\u00e3o</li> </ul>"},{"location":"#como-contribuir","title":"\ud83e\udd1d Como Contribuir","text":"<p>Para contribuir com o projeto, consulte o Guia de Contribui\u00e7\u00e3o na se\u00e7\u00e3o de desenvolvimento.</p>"},{"location":"#contato","title":"\ud83d\udce7 Contato","text":"<p>Para mais informa\u00e7\u00f5es sobre o projeto, entre em contato com a equipe do UBC Lab BD.</p> <p>Esta documenta\u00e7\u00e3o est\u00e1 em constante evolu\u00e7\u00e3o. \u00daltima atualiza\u00e7\u00e3o: Dezembro 2024</p>"},{"location":"api/documentacao/","title":"Documenta\u00e7\u00e3o da API","text":""},{"location":"api/documentacao/#visao-geral","title":"\ud83d\ude80 Vis\u00e3o Geral","text":"<p>A API do UBC Lab BD fornece acesso program\u00e1tico a todas as funcionalidades do sistema, permitindo integra\u00e7\u00e3o com outros sistemas e desenvolvimento de aplica\u00e7\u00f5es customizadas.</p>"},{"location":"api/documentacao/#base-url","title":"\ud83d\udd17 Base URL","text":"<pre><code># Desenvolvimento\nhttps://api-dev.ubclab.example.com/v1\n\n# Produ\u00e7\u00e3o\nhttps://api.ubclab.example.com/v1\n</code></pre>"},{"location":"api/documentacao/#autenticacao","title":"\ud83d\udd10 Autentica\u00e7\u00e3o","text":""},{"location":"api/documentacao/#jwt-bearer-token","title":"JWT Bearer Token","text":"<pre><code>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n</code></pre>"},{"location":"api/documentacao/#obter-token","title":"Obter Token","text":"<pre><code>POST /auth/login\nContent-Type: application/json\n\n{\n    \"username\": \"seu_usuario\",\n    \"password\": \"sua_senha\"\n}\n</code></pre> <p>Resposta: <pre><code>{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 3600\n}\n</code></pre></p>"},{"location":"api/documentacao/#usuarios","title":"\ud83d\udc64 Usu\u00e1rios","text":""},{"location":"api/documentacao/#criar-usuario","title":"Criar Usu\u00e1rio","text":"<pre><code>POST /users\nContent-Type: application/json\nAuthorization: Bearer {token}\n\n{\n    \"username\": \"novousuario\",\n    \"email\": \"usuario@example.com\",\n    \"password\": \"senha_segura_123\",\n    \"full_name\": \"Nome Completo\"\n}\n</code></pre> <p>Resposta (201 Created): <pre><code>{\n    \"id\": 123,\n    \"username\": \"novousuario\",\n    \"email\": \"usuario@example.com\",\n    \"full_name\": \"Nome Completo\",\n    \"is_active\": true,\n    \"created_at\": \"2024-12-08T22:53:00Z\",\n    \"last_login\": null\n}\n</code></pre></p>"},{"location":"api/documentacao/#listar-usuarios","title":"Listar Usu\u00e1rios","text":"<pre><code>GET /users?page=1&amp;size=20&amp;search=termo\nAuthorization: Bearer {token}\n</code></pre> <p>Par\u00e2metros de Query: - <code>page</code> (int, opcional): P\u00e1gina (padr\u00e3o: 1) - <code>size</code> (int, opcional): Itens por p\u00e1gina (padr\u00e3o: 20, m\u00e1x: 100) - <code>search</code> (string, opcional): Busca por username ou email</p> <p>Resposta (200 OK): <pre><code>{\n    \"items\": [\n        {\n            \"id\": 123,\n            \"username\": \"usuario1\",\n            \"email\": \"usuario1@example.com\",\n            \"full_name\": \"Usu\u00e1rio Um\",\n            \"is_active\": true,\n            \"created_at\": \"2024-12-08T22:53:00Z\"\n        }\n    ],\n    \"total\": 1,\n    \"page\": 1,\n    \"size\": 20,\n    \"pages\": 1\n}\n</code></pre></p>"},{"location":"api/documentacao/#obter-usuario-por-id","title":"Obter Usu\u00e1rio por ID","text":"<pre><code>GET /users/{user_id}\nAuthorization: Bearer {token}\n</code></pre>"},{"location":"api/documentacao/#atualizar-usuario","title":"Atualizar Usu\u00e1rio","text":"<pre><code>PUT /users/{user_id}\nContent-Type: application/json\nAuthorization: Bearer {token}\n\n{\n    \"full_name\": \"Nome Atualizado\",\n    \"email\": \"novo_email@example.com\"\n}\n</code></pre>"},{"location":"api/documentacao/#deletar-usuario","title":"Deletar Usu\u00e1rio","text":"<pre><code>DELETE /users/{user_id}\nAuthorization: Bearer {token}\n</code></pre>"},{"location":"api/documentacao/#datasets","title":"\ud83d\udcca Datasets","text":""},{"location":"api/documentacao/#criar-dataset","title":"Criar Dataset","text":"<pre><code>POST /datasets\nContent-Type: application/json\nAuthorization: Bearer {token}\n\n{\n    \"name\": \"Vendas Q4 2024\",\n    \"description\": \"Dados de vendas do quarto trimestre\",\n    \"schema\": {\n        \"columns\": [\n            {\n                \"name\": \"data_venda\",\n                \"type\": \"datetime\",\n                \"required\": true\n            },\n            {\n                \"name\": \"produto\",\n                \"type\": \"string\",\n                \"required\": true\n            },\n            {\n                \"name\": \"valor\",\n                \"type\": \"decimal\",\n                \"required\": true\n            }\n        ]\n    },\n    \"tags\": [\"vendas\", \"q4\", \"2024\"]\n}\n</code></pre>"},{"location":"api/documentacao/#upload-de-dados","title":"Upload de Dados","text":"<pre><code>POST /datasets/{dataset_id}/data\nContent-Type: multipart/form-data\nAuthorization: Bearer {token}\n\nfile: (binary data)\nformat: csv\ndelimiter: ,\nhas_header: true\n</code></pre>"},{"location":"api/documentacao/#consultar-dados","title":"Consultar Dados","text":"<pre><code>GET /datasets/{dataset_id}/data?limit=100&amp;offset=0&amp;filter=valor&gt;1000\nAuthorization: Bearer {token}\n</code></pre> <p>Par\u00e2metros de Query: - <code>limit</code> (int): N\u00famero m\u00e1ximo de registros - <code>offset</code> (int): N\u00famero de registros para pular - <code>filter</code> (string): Filtro SQL-like (ex: \"coluna&gt;valor\", \"nome='Jo\u00e3o'\") - <code>sort</code> (string): Ordena\u00e7\u00e3o (ex: \"data_venda desc\")</p>"},{"location":"api/documentacao/#analytics","title":"\ud83d\udcc8 Analytics","text":""},{"location":"api/documentacao/#executar-analise","title":"Executar An\u00e1lise","text":"<pre><code>POST /analytics/execute\nContent-Type: application/json\nAuthorization: Bearer {token}\n\n{\n    \"dataset_id\": 123,\n    \"analysis_type\": \"statistics\",\n    \"parameters\": {\n        \"columns\": [\"valor\", \"quantidade\"],\n        \"group_by\": [\"produto\"],\n        \"functions\": [\"mean\", \"sum\", \"count\"]\n    }\n}\n</code></pre> <p>Resposta (200 OK): <pre><code>{\n    \"analysis_id\": \"abc123\",\n    \"status\": \"completed\",\n    \"results\": {\n        \"produto_a\": {\n            \"valor_mean\": 150.75,\n            \"valor_sum\": 15075.00,\n            \"quantidade_sum\": 120,\n            \"count\": 100\n        },\n        \"produto_b\": {\n            \"valor_mean\": 230.50,\n            \"valor_sum\": 23050.00,\n            \"quantidade_sum\": 80,\n            \"count\": 100\n        }\n    },\n    \"metadata\": {\n        \"execution_time_ms\": 245,\n        \"rows_processed\": 200\n    }\n}\n</code></pre></p>"},{"location":"api/documentacao/#analises-disponiveis","title":"An\u00e1lises Dispon\u00edveis","text":"<pre><code>GET /analytics/types\nAuthorization: Bearer {token}\n</code></pre>"},{"location":"api/documentacao/#relatorios","title":"\ud83d\udccb Relat\u00f3rios","text":""},{"location":"api/documentacao/#gerar-relatorio","title":"Gerar Relat\u00f3rio","text":"<pre><code>POST /reports\nContent-Type: application/json\nAuthorization: Bearer {token}\n\n{\n    \"name\": \"Relat\u00f3rio de Vendas\",\n    \"dataset_id\": 123,\n    \"template\": \"sales_summary\",\n    \"parameters\": {\n        \"date_range\": {\n            \"start\": \"2024-10-01\",\n            \"end\": \"2024-12-31\"\n        },\n        \"group_by\": \"produto\",\n        \"format\": \"pdf\"\n    }\n}\n</code></pre>"},{"location":"api/documentacao/#download-de-relatorio","title":"Download de Relat\u00f3rio","text":"<pre><code>GET /reports/{report_id}/download\nAuthorization: Bearer {token}\n</code></pre>"},{"location":"api/documentacao/#busca-global","title":"\ud83d\udd0d Busca Global","text":""},{"location":"api/documentacao/#buscar-em-todo-o-sistema","title":"Buscar em Todo o Sistema","text":"<pre><code>GET /search?q=vendas&amp;type=datasets&amp;limit=10\nAuthorization: Bearer {token}\n</code></pre> <p>Par\u00e2metros: - <code>q</code> (string): Termo de busca - <code>type</code> (string, opcional): Tipo de recurso (datasets, users, reports) - <code>limit</code> (int, opcional): Limite de resultados</p>"},{"location":"api/documentacao/#metricas-e-status","title":"\ud83d\udcca M\u00e9tricas e Status","text":""},{"location":"api/documentacao/#status-da-api","title":"Status da API","text":"<pre><code>GET /health\n</code></pre> <p>Resposta: <pre><code>{\n    \"status\": \"healthy\",\n    \"timestamp\": \"2024-12-08T22:53:00Z\",\n    \"version\": \"1.2.3\",\n    \"services\": {\n        \"database\": \"healthy\",\n        \"cache\": \"healthy\",\n        \"storage\": \"healthy\"\n    }\n}\n</code></pre></p>"},{"location":"api/documentacao/#metricas-do-sistema","title":"M\u00e9tricas do Sistema","text":"<pre><code>GET /metrics\nAuthorization: Bearer {token}\n</code></pre>"},{"location":"api/documentacao/#codigos-de-erro","title":"\u274c C\u00f3digos de Erro","text":""},{"location":"api/documentacao/#estrutura-de-erro","title":"Estrutura de Erro","text":"<pre><code>{\n    \"error\": {\n        \"code\": \"VALIDATION_ERROR\",\n        \"message\": \"Dados de entrada inv\u00e1lidos\",\n        \"details\": {\n            \"field\": \"email\",\n            \"reason\": \"formato inv\u00e1lido\"\n        },\n        \"timestamp\": \"2024-12-08T22:53:00Z\",\n        \"request_id\": \"req_abc123\"\n    }\n}\n</code></pre>"},{"location":"api/documentacao/#codigos-http-comuns","title":"C\u00f3digos HTTP Comuns","text":"<ul> <li>200 OK: Sucesso</li> <li>201 Created: Recurso criado</li> <li>400 Bad Request: Dados inv\u00e1lidos</li> <li>401 Unauthorized: N\u00e3o autenticado</li> <li>403 Forbidden: Sem permiss\u00e3o</li> <li>404 Not Found: Recurso n\u00e3o encontrado</li> <li>422 Unprocessable Entity: Erro de valida\u00e7\u00e3o</li> <li>429 Too Many Requests: Rate limit excedido</li> <li>500 Internal Server Error: Erro interno</li> </ul>"},{"location":"api/documentacao/#rate-limiting","title":"\ud83d\udd04 Rate Limiting","text":""},{"location":"api/documentacao/#limites-por-usuario","title":"Limites por Usu\u00e1rio","text":"<ul> <li>Requests por minuto: 1000</li> <li>Requests por hora: 10000</li> <li>Upload de dados: 10 arquivos/hora</li> </ul>"},{"location":"api/documentacao/#headers-de-rate-limit","title":"Headers de Rate Limit","text":"<pre><code>X-RateLimit-Limit: 1000\nX-RateLimit-Remaining: 999\nX-RateLimit-Reset: 1640995200\n</code></pre>"},{"location":"api/documentacao/#versionamento","title":"\ud83d\udd04 Versionamento","text":""},{"location":"api/documentacao/#estrategia","title":"Estrat\u00e9gia","text":"<ul> <li>Versionamento na URL: <code>/v1/</code>, <code>/v2/</code></li> <li>Backward compatibility mantida por 12 meses</li> <li>Deprecation notices com 6 meses de anteced\u00eancia</li> </ul>"},{"location":"api/documentacao/#headers-de-versao","title":"Headers de Vers\u00e3o","text":"<pre><code>API-Version: 1.0\nDeprecated-Version: false\nSunset-Date: 2025-12-01\n</code></pre>"},{"location":"api/documentacao/#sdks-e-bibliotecas","title":"\ud83d\udcda SDKs e Bibliotecas","text":""},{"location":"api/documentacao/#python","title":"Python","text":"<pre><code>pip install ubclab-client\n</code></pre> <pre><code>from ubclab import UBCLabClient\n\nclient = UBCLabClient(\n    base_url=\"https://api.ubclab.example.com/v1\",\n    token=\"seu_token_aqui\"\n)\n\n# Criar dataset\ndataset = client.datasets.create({\n    \"name\": \"Meu Dataset\",\n    \"description\": \"Descri\u00e7\u00e3o do dataset\"\n})\n\n# Upload de dados\nclient.datasets.upload_data(dataset.id, \"dados.csv\")\n</code></pre>"},{"location":"api/documentacao/#javascriptnodejs","title":"JavaScript/Node.js","text":"<pre><code>npm install @ubclab/client\n</code></pre> <pre><code>import { UBCLabClient } from '@ubclab/client';\n\nconst client = new UBCLabClient({\n    baseURL: 'https://api.ubclab.example.com/v1',\n    token: 'seu_token_aqui'\n});\n\n// Listar datasets\nconst datasets = await client.datasets.list();\n</code></pre>"},{"location":"api/documentacao/#ambiente-de-testes","title":"\ud83e\uddea Ambiente de Testes","text":""},{"location":"api/documentacao/#sandbox","title":"Sandbox","text":"<pre><code>https://api-sandbox.ubclab.example.com/v1\n</code></pre> <ul> <li>Dados de teste pr\u00e9-carregados</li> <li>Reset di\u00e1rio \u00e0s 00:00 UTC</li> <li>Todas as funcionalidades dispon\u00edveis</li> </ul> <p>Para exemplos pr\u00e1ticos de uso da API, consulte a se\u00e7\u00e3o Exemplos.</p>"},{"location":"api/exemplos/","title":"Exemplos de Uso da API","text":""},{"location":"api/exemplos/#comecando","title":"\ud83d\ude80 Come\u00e7ando","text":""},{"location":"api/exemplos/#1-autenticacao-e-primeiro-acesso","title":"1. Autentica\u00e7\u00e3o e Primeiro Acesso","text":"<pre><code>import requests\nimport json\n\n# Configura\u00e7\u00e3o base\nBASE_URL = \"https://api.ubclab.example.com/v1\"\n\n# Login\nlogin_data = {\n    \"username\": \"seu_usuario\",\n    \"password\": \"sua_senha\"\n}\n\nresponse = requests.post(f\"{BASE_URL}/auth/login\", json=login_data)\nauth_data = response.json()\n\n# Token para pr\u00f3ximas requisi\u00e7\u00f5es\ntoken = auth_data[\"access_token\"]\nheaders = {\"Authorization\": f\"Bearer {token}\"}\n\nprint(f\"Logado com sucesso! Token v\u00e1lido por {auth_data['expires_in']} segundos\")\n</code></pre>"},{"location":"api/exemplos/#2-verificar-status-da-api","title":"2. Verificar Status da API","text":"<pre><code># Verificar se a API est\u00e1 funcionando\nresponse = requests.get(f\"{BASE_URL}/health\")\nstatus = response.json()\n\nprint(f\"Status da API: {status['status']}\")\nprint(f\"Vers\u00e3o: {status['version']}\")\n</code></pre>"},{"location":"api/exemplos/#trabalhando-com-datasets","title":"\ud83d\udcca Trabalhando com Datasets","text":""},{"location":"api/exemplos/#exemplo-completo-upload-e-analise-de-dados-de-vendas","title":"Exemplo Completo: Upload e An\u00e1lise de Dados de Vendas","text":"<pre><code>import pandas as pd\nimport requests\nimport json\nfrom io import StringIO\n\n# Headers com autentica\u00e7\u00e3o\nheaders = {\"Authorization\": f\"Bearer {token}\"}\n\n# 1. Criar um novo dataset\ndataset_config = {\n    \"name\": \"Vendas 2024\",\n    \"description\": \"Dados de vendas do ano de 2024\",\n    \"schema\": {\n        \"columns\": [\n            {\"name\": \"data_venda\", \"type\": \"datetime\", \"required\": True},\n            {\"name\": \"produto\", \"type\": \"string\", \"required\": True},\n            {\"name\": \"categoria\", \"type\": \"string\", \"required\": True},\n            {\"name\": \"preco\", \"type\": \"decimal\", \"required\": True},\n            {\"name\": \"quantidade\", \"type\": \"integer\", \"required\": True},\n            {\"name\": \"vendedor\", \"type\": \"string\", \"required\": True}\n        ]\n    },\n    \"tags\": [\"vendas\", \"2024\", \"comercial\"]\n}\n\nresponse = requests.post(\n    f\"{BASE_URL}/datasets\",\n    json=dataset_config,\n    headers=headers\n)\n\ndataset = response.json()\ndataset_id = dataset[\"id\"]\nprint(f\"Dataset criado com ID: {dataset_id}\")\n\n# 2. Preparar dados de exemplo\ndados_vendas = [\n    {\"data_venda\": \"2024-01-15\", \"produto\": \"Laptop\", \"categoria\": \"Eletr\u00f4nicos\", \n     \"preco\": 2500.00, \"quantidade\": 2, \"vendedor\": \"Jo\u00e3o\"},\n    {\"data_venda\": \"2024-01-16\", \"produto\": \"Mouse\", \"categoria\": \"Eletr\u00f4nicos\", \n     \"preco\": 50.00, \"quantidade\": 5, \"vendedor\": \"Maria\"},\n    {\"data_venda\": \"2024-01-17\", \"produto\": \"Cadeira\", \"categoria\": \"M\u00f3veis\", \n     \"preco\": 300.00, \"quantidade\": 1, \"vendedor\": \"Jo\u00e3o\"},\n    {\"data_venda\": \"2024-01-18\", \"produto\": \"Mesa\", \"categoria\": \"M\u00f3veis\", \n     \"preco\": 450.00, \"quantidade\": 1, \"vendedor\": \"Ana\"},\n]\n\n# Converter para CSV\ndf = pd.DataFrame(dados_vendas)\ncsv_data = df.to_csv(index=False)\n\n# 3. Upload dos dados\nfiles = {'file': ('vendas.csv', StringIO(csv_data), 'text/csv')}\ndata = {\n    'format': 'csv',\n    'delimiter': ',',\n    'has_header': 'true'\n}\n\nresponse = requests.post(\n    f\"{BASE_URL}/datasets/{dataset_id}/data\",\n    files=files,\n    data=data,\n    headers=headers\n)\n\nprint(f\"Upload conclu\u00eddo: {response.json()}\")\n</code></pre>"},{"location":"api/exemplos/#consultando-dados","title":"Consultando Dados","text":"<pre><code># Consultar todos os dados\nresponse = requests.get(\n    f\"{BASE_URL}/datasets/{dataset_id}/data\",\n    headers=headers\n)\ndados = response.json()\nprint(f\"Total de registros: {len(dados['items'])}\")\n\n# Consultar com filtros\nparams = {\n    \"filter\": \"preco &gt; 100\",\n    \"sort\": \"data_venda desc\",\n    \"limit\": 10\n}\n\nresponse = requests.get(\n    f\"{BASE_URL}/datasets/{dataset_id}/data\",\n    params=params,\n    headers=headers\n)\n\ndados_filtrados = response.json()\nprint(\"Vendas acima de R$ 100:\")\nfor item in dados_filtrados['items']:\n    print(f\"- {item['produto']}: R$ {item['preco']}\")\n</code></pre>"},{"location":"api/exemplos/#analises-de-dados","title":"\ud83d\udcc8 An\u00e1lises de Dados","text":""},{"location":"api/exemplos/#estatisticas-basicas","title":"Estat\u00edsticas B\u00e1sicas","text":"<pre><code># Executar an\u00e1lise estat\u00edstica\nanalise_config = {\n    \"dataset_id\": dataset_id,\n    \"analysis_type\": \"statistics\",\n    \"parameters\": {\n        \"columns\": [\"preco\", \"quantidade\"],\n        \"group_by\": [\"categoria\"],\n        \"functions\": [\"mean\", \"sum\", \"count\", \"max\", \"min\"]\n    }\n}\n\nresponse = requests.post(\n    f\"{BASE_URL}/analytics/execute\",\n    json=analise_config,\n    headers=headers\n)\n\nresultados = response.json()\n\nprint(\"Estat\u00edsticas por categoria:\")\nfor categoria, stats in resultados[\"results\"].items():\n    print(f\"\\n{categoria}:\")\n    print(f\"  Pre\u00e7o m\u00e9dio: R$ {stats['preco_mean']:.2f}\")\n    print(f\"  Total vendido: R$ {stats['preco_sum']:.2f}\")\n    print(f\"  Quantidade total: {stats['quantidade_sum']}\")\n    print(f\"  N\u00famero de vendas: {stats['count']}\")\n</code></pre>"},{"location":"api/exemplos/#analise-de-tendencias","title":"An\u00e1lise de Tend\u00eancias","text":"<pre><code># An\u00e1lise de vendas por per\u00edodo\nanalise_periodo = {\n    \"dataset_id\": dataset_id,\n    \"analysis_type\": \"time_series\",\n    \"parameters\": {\n        \"date_column\": \"data_venda\",\n        \"value_column\": \"preco\",\n        \"aggregation\": \"sum\",\n        \"period\": \"daily\",\n        \"date_range\": {\n            \"start\": \"2024-01-01\",\n            \"end\": \"2024-12-31\"\n        }\n    }\n}\n\nresponse = requests.post(\n    f\"{BASE_URL}/analytics/execute\",\n    json=analise_periodo,\n    headers=headers\n)\n\ntendencia = response.json()\nprint(\"Vendas por dia:\", tendencia[\"results\"])\n</code></pre>"},{"location":"api/exemplos/#gerando-relatorios","title":"\ud83d\udccb Gerando Relat\u00f3rios","text":""},{"location":"api/exemplos/#relatorio-de-vendas-em-pdf","title":"Relat\u00f3rio de Vendas em PDF","text":"<pre><code># Configurar relat\u00f3rio\nrelatorio_config = {\n    \"name\": \"Relat\u00f3rio Mensal de Vendas\",\n    \"dataset_id\": dataset_id,\n    \"template\": \"sales_summary\",\n    \"parameters\": {\n        \"date_range\": {\n            \"start\": \"2024-01-01\",\n            \"end\": \"2024-01-31\"\n        },\n        \"group_by\": [\"categoria\", \"vendedor\"],\n        \"format\": \"pdf\",\n        \"include_charts\": True,\n        \"charts\": [\"bar\", \"pie\"]\n    }\n}\n\n# Gerar relat\u00f3rio\nresponse = requests.post(\n    f\"{BASE_URL}/reports\",\n    json=relatorio_config,\n    headers=headers\n)\n\nrelatorio = response.json()\nreport_id = relatorio[\"id\"]\n\nprint(f\"Relat\u00f3rio gerado com ID: {report_id}\")\n\n# Aguardar processamento (em produ\u00e7\u00e3o, usar webhooks)\nimport time\nwhile True:\n    response = requests.get(\n        f\"{BASE_URL}/reports/{report_id}\",\n        headers=headers\n    )\n    status = response.json()[\"status\"]\n\n    if status == \"completed\":\n        break\n    elif status == \"failed\":\n        print(\"Erro na gera\u00e7\u00e3o do relat\u00f3rio\")\n        break\n\n    print(f\"Status: {status}\")\n    time.sleep(2)\n\n# Download do relat\u00f3rio\nresponse = requests.get(\n    f\"{BASE_URL}/reports/{report_id}/download\",\n    headers=headers\n)\n\nwith open(\"relatorio_vendas.pdf\", \"wb\") as f:\n    f.write(response.content)\n\nprint(\"Relat\u00f3rio baixado: relatorio_vendas.pdf\")\n</code></pre>"},{"location":"api/exemplos/#busca-e-descoberta","title":"\ud83d\udd0d Busca e Descoberta","text":""},{"location":"api/exemplos/#buscar-datasets","title":"Buscar Datasets","text":"<pre><code># Buscar datasets por termo\nresponse = requests.get(\n    f\"{BASE_URL}/search\",\n    params={\"q\": \"vendas\", \"type\": \"datasets\"},\n    headers=headers\n)\n\nresultados = response.json()\n\nprint(\"Datasets encontrados:\")\nfor dataset in resultados[\"items\"]:\n    print(f\"- {dataset['name']}: {dataset['description']}\")\n</code></pre>"},{"location":"api/exemplos/#automacao-com-workflows","title":"\ud83e\udd16 Automa\u00e7\u00e3o com Workflows","text":""},{"location":"api/exemplos/#script-de-etl-completo","title":"Script de ETL Completo","text":"<pre><code>class UBCLabETL:\n    def __init__(self, base_url, token):\n        self.base_url = base_url\n        self.headers = {\"Authorization\": f\"Bearer {token}\"}\n\n    def create_dataset(self, config):\n        \"\"\"Criar dataset\"\"\"\n        response = requests.post(\n            f\"{self.base_url}/datasets\",\n            json=config,\n            headers=self.headers\n        )\n        return response.json()\n\n    def upload_data(self, dataset_id, file_path):\n        \"\"\"Upload de arquivo\"\"\"\n        with open(file_path, 'rb') as f:\n            files = {'file': f}\n            data = {\n                'format': 'csv',\n                'delimiter': ',',\n                'has_header': 'true'\n            }\n\n            response = requests.post(\n                f\"{self.base_url}/datasets/{dataset_id}/data\",\n                files=files,\n                data=data,\n                headers=self.headers\n            )\n        return response.json()\n\n    def run_analysis(self, dataset_id, analysis_config):\n        \"\"\"Executar an\u00e1lise\"\"\"\n        config = {\n            \"dataset_id\": dataset_id,\n            **analysis_config\n        }\n\n        response = requests.post(\n            f\"{self.base_url}/analytics/execute\",\n            json=config,\n            headers=self.headers\n        )\n        return response.json()\n\n    def generate_report(self, dataset_id, report_config):\n        \"\"\"Gerar relat\u00f3rio\"\"\"\n        config = {\n            \"dataset_id\": dataset_id,\n            **report_config\n        }\n\n        response = requests.post(\n            f\"{self.base_url}/reports\",\n            json=config,\n            headers=self.headers\n        )\n        return response.json()\n\n# Uso do ETL\netl = UBCLabETL(BASE_URL, token)\n\n# Processo completo\ndataset = etl.create_dataset({\n    \"name\": \"Dados de Produ\u00e7\u00e3o\",\n    \"description\": \"Dados automatizados de produ\u00e7\u00e3o\"\n})\n\nupload_result = etl.upload_data(dataset[\"id\"], \"dados_producao.csv\")\n\nanalysis_result = etl.run_analysis(dataset[\"id\"], {\n    \"analysis_type\": \"statistics\",\n    \"parameters\": {\"columns\": [\"eficiencia\", \"tempo_producao\"]}\n})\n\nreport = etl.generate_report(dataset[\"id\"], {\n    \"name\": \"Relat\u00f3rio de Produ\u00e7\u00e3o Automatizado\",\n    \"template\": \"production_summary\",\n    \"format\": \"pdf\"\n})\n\nprint(\"Pipeline ETL executado com sucesso!\")\n</code></pre>"},{"location":"api/exemplos/#integracao-com-javascript","title":"\ud83c\udf10 Integra\u00e7\u00e3o com JavaScript","text":""},{"location":"api/exemplos/#frontend-react","title":"Frontend React","text":"<pre><code>// hooks/useUBCLabAPI.js\nimport { useState, useEffect } from 'react';\n\nconst API_BASE = 'https://api.ubclab.example.com/v1';\n\nexport function useUBCLabAPI(token) {\n    const [datasets, setDatasets] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n    };\n\n    const fetchDatasets = async () =&gt; {\n        setLoading(true);\n        try {\n            const response = await fetch(`${API_BASE}/datasets`, { headers });\n            const data = await response.json();\n            setDatasets(data.items);\n        } catch (error) {\n            console.error('Erro ao buscar datasets:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const createDataset = async (config) =&gt; {\n        const response = await fetch(`${API_BASE}/datasets`, {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(config)\n        });\n        return response.json();\n    };\n\n    return {\n        datasets,\n        loading,\n        fetchDatasets,\n        createDataset\n    };\n}\n\n// components/DatasetList.jsx\nfunction DatasetList({ token }) {\n    const { datasets, loading, fetchDatasets } = useUBCLabAPI(token);\n\n    useEffect(() =&gt; {\n        fetchDatasets();\n    }, []);\n\n    if (loading) return &lt;div&gt;Carregando...&lt;/div&gt;;\n\n    return (\n        &lt;div&gt;\n            &lt;h2&gt;Meus Datasets&lt;/h2&gt;\n            {datasets.map(dataset =&gt; (\n                &lt;div key={dataset.id} className=\"dataset-card\"&gt;\n                    &lt;h3&gt;{dataset.name}&lt;/h3&gt;\n                    &lt;p&gt;{dataset.description}&lt;/p&gt;\n                    &lt;span&gt;Criado em: {new Date(dataset.created_at).toLocaleDateString()}&lt;/span&gt;\n                &lt;/div&gt;\n            ))}\n        &lt;/div&gt;\n    );\n}\n</code></pre>"},{"location":"api/exemplos/#tratamento-de-erros","title":"\ud83d\udd04 Tratamento de Erros","text":""},{"location":"api/exemplos/#retry-e-error-handling","title":"Retry e Error Handling","text":"<pre><code>import time\nfrom typing import Optional\n\nclass UBCLabAPIClient:\n    def __init__(self, base_url: str, token: str):\n        self.base_url = base_url\n        self.headers = {\"Authorization\": f\"Bearer {token}\"}\n\n    def _make_request(self, method: str, endpoint: str, \n                     max_retries: int = 3, **kwargs) -&gt; Optional[dict]:\n        \"\"\"Fazer requisi\u00e7\u00e3o com retry autom\u00e1tico\"\"\"\n\n        for attempt in range(max_retries):\n            try:\n                response = requests.request(\n                    method, \n                    f\"{self.base_url}{endpoint}\",\n                    headers=self.headers,\n                    **kwargs\n                )\n\n                if response.status_code == 429:  # Rate limit\n                    retry_after = int(response.headers.get('Retry-After', 60))\n                    print(f\"Rate limit atingido. Aguardando {retry_after}s...\")\n                    time.sleep(retry_after)\n                    continue\n\n                response.raise_for_status()\n                return response.json()\n\n            except requests.exceptions.RequestException as e:\n                if attempt == max_retries - 1:\n                    print(f\"Erro ap\u00f3s {max_retries} tentativas: {e}\")\n                    raise\n\n                wait_time = 2 ** attempt  # Backoff exponencial\n                print(f\"Tentativa {attempt + 1} falhou. Tentando novamente em {wait_time}s...\")\n                time.sleep(wait_time)\n\n        return None\n\n    def get_dataset(self, dataset_id: int) -&gt; Optional[dict]:\n        return self._make_request(\"GET\", f\"/datasets/{dataset_id}\")\n\n# Uso com tratamento de erro\nclient = UBCLabAPIClient(BASE_URL, token)\n\ntry:\n    dataset = client.get_dataset(123)\n    if dataset:\n        print(f\"Dataset: {dataset['name']}\")\n    else:\n        print(\"Dataset n\u00e3o encontrado\")\nexcept Exception as e:\n    print(f\"Erro ao buscar dataset: {e}\")\n</code></pre> <p>Para refer\u00eancia completa da API, consulte a Documenta\u00e7\u00e3o da API.</p>"},{"location":"deploy/configuracao/","title":"Configura\u00e7\u00e3o para Deploy","text":""},{"location":"deploy/configuracao/#visao-geral","title":"\ud83d\ude80 Vis\u00e3o Geral","text":"<p>Este guia aborda as configura\u00e7\u00f5es necess\u00e1rias para fazer deploy do UBC Lab BD em diferentes ambientes, desde desenvolvimento at\u00e9 produ\u00e7\u00e3o.</p>"},{"location":"deploy/configuracao/#variaveis-de-ambiente","title":"\ud83d\udd27 Vari\u00e1veis de Ambiente","text":""},{"location":"deploy/configuracao/#configuracoes-essenciais","title":"Configura\u00e7\u00f5es Essenciais","text":"<pre><code># .env.production\n# Database\nDATABASE_URL=postgresql://user:password@host:port/database\nDATABASE_POOL_SIZE=20\nDATABASE_POOL_MAX_OVERFLOW=30\n\n# Security\nSECRET_KEY=sua_chave_secreta_super_forte_aqui\nJWT_SECRET_KEY=chave_jwt_diferente_e_segura\nENCRYPTION_KEY=chave_de_criptografia_32_bytes\n\n# API Configuration\nAPI_HOST=0.0.0.0\nAPI_PORT=8000\nAPI_WORKERS=4\nDEBUG=false\n\n# Cache\nREDIS_URL=redis://user:password@host:port/db\nCACHE_TTL=3600\n\n# Storage\nS3_BUCKET=ubclab-storage\nS3_ACCESS_KEY=AKIA...\nS3_SECRET_KEY=...\nS3_REGION=us-east-1\n\n# Monitoring\nSENTRY_DSN=https://...@sentry.io/project\nLOG_LEVEL=INFO\nMETRICS_ENABLED=true\n\n# External Services\nSMTP_HOST=smtp.gmail.com\nSMTP_PORT=587\nSMTP_USER=noreply@ubclab.com\nSMTP_PASSWORD=app_password\n</code></pre>"},{"location":"deploy/configuracao/#configuracoes-por-ambiente","title":"Configura\u00e7\u00f5es por Ambiente","text":""},{"location":"deploy/configuracao/#desenvolvimento","title":"Desenvolvimento","text":"<pre><code># .env.development\nDEBUG=true\nLOG_LEVEL=DEBUG\nDATABASE_URL=postgresql://dev:dev@localhost:5432/ubclab_dev\nREDIS_URL=redis://localhost:6379/0\nAPI_WORKERS=1\n</code></pre>"},{"location":"deploy/configuracao/#staging","title":"Staging","text":"<pre><code># .env.staging\nDEBUG=false\nLOG_LEVEL=INFO\nDATABASE_URL=postgresql://staging_user:pass@staging-db:5432/ubclab_staging\nREDIS_URL=redis://staging-redis:6379/0\nAPI_WORKERS=2\n</code></pre>"},{"location":"deploy/configuracao/#producao","title":"Produ\u00e7\u00e3o","text":"<pre><code># .env.production\nDEBUG=false\nLOG_LEVEL=WARNING\nDATABASE_URL=postgresql://prod_user:secure_pass@prod-db:5432/ubclab_prod\nREDIS_URL=redis://prod-redis:6379/0\nAPI_WORKERS=8\n</code></pre>"},{"location":"deploy/configuracao/#configuracao-de-banco-de-dados","title":"\ud83d\uddc4\ufe0f Configura\u00e7\u00e3o de Banco de Dados","text":""},{"location":"deploy/configuracao/#postgresql","title":"PostgreSQL","text":""},{"location":"deploy/configuracao/#configuracao-basica","title":"Configura\u00e7\u00e3o B\u00e1sica","text":"<pre><code>-- Criar banco e usu\u00e1rio\nCREATE USER ubclab_user WITH PASSWORD 'secure_password';\nCREATE DATABASE ubclab_prod WITH OWNER ubclab_user;\n\n-- Extens\u00f5es necess\u00e1rias\n\\c ubclab_prod\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nCREATE EXTENSION IF NOT EXISTS \"pg_stat_statements\";\nCREATE EXTENSION IF NOT EXISTS \"pg_trgm\";\n\n-- Configura\u00e7\u00f5es de performance\nALTER SYSTEM SET shared_preload_libraries = 'pg_stat_statements';\nALTER SYSTEM SET max_connections = 200;\nALTER SYSTEM SET shared_buffers = '1GB';\nALTER SYSTEM SET effective_cache_size = '3GB';\nALTER SYSTEM SET work_mem = '16MB';\nALTER SYSTEM SET maintenance_work_mem = '256MB';\n</code></pre>"},{"location":"deploy/configuracao/#postgresqlconf-otimizado","title":"postgresql.conf Otimizado","text":"<pre><code># Conex\u00f5es\nmax_connections = 200\nsuperuser_reserved_connections = 3\n\n# Mem\u00f3ria\nshared_buffers = 1GB                    # 25% da RAM\neffective_cache_size = 3GB              # 75% da RAM\nwork_mem = 16MB\nmaintenance_work_mem = 256MB\ndynamic_shared_memory_type = posix\n\n# WAL\nwal_buffers = 16MB\ncheckpoint_completion_target = 0.9\nwal_compression = on\nmax_wal_size = 2GB\nmin_wal_size = 1GB\n\n# Query Planner\nrandom_page_cost = 1.1\neffective_io_concurrency = 200\n\n# Logging\nlog_min_duration_statement = 1000\nlog_checkpoints = on\nlog_connections = on\nlog_disconnections = on\nlog_lock_waits = on\n</code></pre>"},{"location":"deploy/configuracao/#migrations","title":"Migrations","text":"<pre><code># migrations/001_initial_schema.py\nfrom alembic import op\nimport sqlalchemy as sa\n\ndef upgrade():\n    # Usu\u00e1rios\n    op.create_table(\n        'users',\n        sa.Column('id', sa.Integer, primary_key=True),\n        sa.Column('username', sa.String(50), unique=True, nullable=False),\n        sa.Column('email', sa.String(120), unique=True, nullable=False),\n        sa.Column('password_hash', sa.String(255), nullable=False),\n        sa.Column('is_active', sa.Boolean, default=True),\n        sa.Column('created_at', sa.DateTime, default=sa.func.now()),\n        sa.Column('updated_at', sa.DateTime, default=sa.func.now(), onupdate=sa.func.now())\n    )\n\n    # \u00cdndices\n    op.create_index('idx_users_username', 'users', ['username'])\n    op.create_index('idx_users_email', 'users', ['email'])\n    op.create_index('idx_users_created_at', 'users', ['created_at'])\n\ndef downgrade():\n    op.drop_table('users')\n</code></pre>"},{"location":"deploy/configuracao/#docker-configuration","title":"\ud83d\udc33 Docker Configuration","text":""},{"location":"deploy/configuracao/#dockerfile","title":"Dockerfile","text":"<pre><code># Multi-stage build\nFROM python:3.11-slim as builder\n\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    gcc \\\n    libpq-dev \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Production image\nFROM python:3.11-slim\n\nWORKDIR /app\n\n# Install runtime dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    libpq5 \\\n    curl \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Copy from builder\nCOPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages\nCOPY --from=builder /usr/local/bin /usr/local/bin\n\n# Copy application\nCOPY . .\n\n# Create non-root user\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\nRUN chown -R appuser:appuser /app\nUSER appuser\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8000/health || exit 1\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"--workers\", \"4\", \"app:app\"]\n</code></pre>"},{"location":"deploy/configuracao/#docker-composeyml","title":"docker-compose.yml","text":"<pre><code>version: '3.8'\n\nservices:\n  app:\n    build: .\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DATABASE_URL=postgresql://ubclab:password@db:5432/ubclab\n      - REDIS_URL=redis://redis:6379/0\n    depends_on:\n      - db\n      - redis\n    volumes:\n      - ./logs:/app/logs\n    restart: unless-stopped\n\n  db:\n    image: postgres:15\n    environment:\n      POSTGRES_DB: ubclab\n      POSTGRES_USER: ubclab\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"5432:5432\"\n    restart: unless-stopped\n\n  redis:\n    image: redis:7-alpine\n    command: redis-server --appendonly yes --requirepass redis_password\n    volumes:\n      - redis_data:/data\n    ports:\n      - \"6379:6379\"\n    restart: unless-stopped\n\n  nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n      - ./ssl:/etc/nginx/ssl\n    depends_on:\n      - app\n    restart: unless-stopped\n\nvolumes:\n  postgres_data:\n  redis_data:\n</code></pre>"},{"location":"deploy/configuracao/#configuracao-do-servidor-web","title":"\u2699\ufe0f Configura\u00e7\u00e3o do Servidor Web","text":""},{"location":"deploy/configuracao/#nginx","title":"NGINX","text":"<pre><code># nginx.conf\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    upstream app {\n        server app:8000;\n    }\n\n    # Rate limiting\n    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;\n\n    # Gzip compression\n    gzip on;\n    gzip_vary on;\n    gzip_types\n        text/plain\n        text/css\n        text/xml\n        text/javascript\n        application/json\n        application/javascript\n        application/xml+rss\n        application/atom+xml\n        image/svg+xml;\n\n    server {\n        listen 80;\n        server_name ubclab.example.com;\n        return 301 https://$server_name$request_uri;\n    }\n\n    server {\n        listen 443 ssl http2;\n        server_name ubclab.example.com;\n\n        # SSL configuration\n        ssl_certificate /etc/nginx/ssl/cert.pem;\n        ssl_certificate_key /etc/nginx/ssl/key.pem;\n        ssl_protocols TLSv1.2 TLSv1.3;\n        ssl_ciphers HIGH:!aNULL:!MD5;\n\n        # Security headers\n        add_header X-Frame-Options DENY;\n        add_header X-Content-Type-Options nosniff;\n        add_header X-XSS-Protection \"1; mode=block\";\n        add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\";\n\n        # API routes\n        location /api/ {\n            limit_req zone=api burst=20 nodelay;\n\n            proxy_pass http://app;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n\n            # Timeouts\n            proxy_connect_timeout 60s;\n            proxy_send_timeout 60s;\n            proxy_read_timeout 60s;\n\n            # File upload\n            client_max_body_size 100M;\n        }\n\n        # Static files\n        location /static/ {\n            alias /app/static/;\n            expires 1y;\n            add_header Cache-Control \"public, immutable\";\n        }\n\n        # Health check\n        location /health {\n            proxy_pass http://app;\n            access_log off;\n        }\n    }\n}\n</code></pre>"},{"location":"deploy/configuracao/#configuracoes-de-seguranca","title":"\ud83d\udd12 Configura\u00e7\u00f5es de Seguran\u00e7a","text":""},{"location":"deploy/configuracao/#ssltls","title":"SSL/TLS","text":"<pre><code># Gerar certificados SSL (desenvolvimento)\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n\n# Let's Encrypt (produ\u00e7\u00e3o)\ncertbot --nginx -d ubclab.example.com\n</code></pre>"},{"location":"deploy/configuracao/#firewall","title":"Firewall","text":"<pre><code># UFW configuration\nufw default deny incoming\nufw default allow outgoing\nufw allow ssh\nufw allow 80\nufw allow 443\nufw enable\n</code></pre>"},{"location":"deploy/configuracao/#secrets-management","title":"Secrets Management","text":"<pre><code># kubernetes-secrets.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ubclab-secrets\ntype: Opaque\ndata:\n  database-url: cG9zdGdyZXNxbC0uLi4=  # base64 encoded\n  jwt-secret: and0LXNlY3JldC0uLi4=    # base64 encoded\n  s3-access-key: czMtYWNjZXNzLWtleQ==  # base64 encoded\n</code></pre>"},{"location":"deploy/configuracao/#monitoramento","title":"\ud83d\udcca Monitoramento","text":""},{"location":"deploy/configuracao/#prometheus-configuration","title":"Prometheus Configuration","text":"<pre><code># prometheus.yml\nglobal:\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: 'ubclab'\n    static_configs:\n      - targets: ['app:8000']\n    metrics_path: '/metrics'\n    scrape_interval: 10s\n\nrule_files:\n  - \"alerts.yml\"\n\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n          - alertmanager:9093\n</code></pre>"},{"location":"deploy/configuracao/#application-metrics","title":"Application Metrics","text":"<pre><code># metrics.py\nfrom prometheus_client import Counter, Histogram, Gauge, generate_latest\n\n# M\u00e9tricas customizadas\nREQUEST_COUNT = Counter('http_requests_total', 'Total HTTP requests', ['method', 'endpoint'])\nREQUEST_DURATION = Histogram('http_request_duration_seconds', 'HTTP request duration')\nACTIVE_USERS = Gauge('active_users_total', 'Number of active users')\nDATABASE_CONNECTIONS = Gauge('database_connections_active', 'Active database connections')\n\n@app.route('/metrics')\ndef metrics():\n    return generate_latest(), 200, {'Content-Type': 'text/plain; charset=utf-8'}\n</code></pre>"},{"location":"deploy/configuracao/#configuracao-cloud","title":"\u2601\ufe0f Configura\u00e7\u00e3o Cloud","text":""},{"location":"deploy/configuracao/#aws","title":"AWS","text":"<pre><code># cloudformation-template.yaml\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: 10.0.0.0/16\n\n  RDSInstance:\n    Type: AWS::RDS::DBInstance\n    Properties:\n      DBInstanceClass: db.t3.medium\n      Engine: postgres\n      EngineVersion: '15.4'\n      MasterUsername: ubclab\n      MasterUserPassword: !Ref DBPassword\n      AllocatedStorage: 100\n      StorageType: gp2\n\n  ElastiCacheCluster:\n    Type: AWS::ElastiCache::CacheCluster\n    Properties:\n      CacheNodeType: cache.t3.micro\n      Engine: redis\n      NumCacheNodes: 1\n</code></pre>"},{"location":"deploy/configuracao/#kubernetes","title":"Kubernetes","text":"<pre><code># k8s-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ubclab-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: ubclab\n  template:\n    metadata:\n      labels:\n        app: ubclab\n    spec:\n      containers:\n      - name: app\n        image: ubclab/app:latest\n        ports:\n        - containerPort: 8000\n        env:\n        - name: DATABASE_URL\n          valueFrom:\n            secretKeyRef:\n              name: ubclab-secrets\n              key: database-url\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8000\n          initialDelaySeconds: 30\n          periodSeconds: 10\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: ubclab-service\nspec:\n  selector:\n    app: ubclab\n  ports:\n  - port: 80\n    targetPort: 8000\n  type: LoadBalancer\n</code></pre>"},{"location":"deploy/configuracao/#backup-e-disaster-recovery","title":"\ud83d\udd04 Backup e Disaster Recovery","text":""},{"location":"deploy/configuracao/#database-backup","title":"Database Backup","text":"<pre><code>#!/bin/bash\n# backup-database.sh\n\nDATE=$(date +%Y%m%d_%H%M%S)\nBACKUP_FILE=\"ubclab_backup_${DATE}.sql\"\n\n# Backup\npg_dump $DATABASE_URL &gt; $BACKUP_FILE\n\n# Comprimir\ngzip $BACKUP_FILE\n\n# Upload para S3\naws s3 cp ${BACKUP_FILE}.gz s3://ubclab-backups/database/\n\n# Limpeza local (manter apenas 7 dias)\nfind . -name \"ubclab_backup_*.sql.gz\" -mtime +7 -delete\n</code></pre>"},{"location":"deploy/configuracao/#application-backup","title":"Application Backup","text":"<pre><code>#!/bin/bash\n# backup-files.sh\n\n# Backup de arquivos uploaded\ntar -czf uploads_backup_$(date +%Y%m%d).tar.gz /app/uploads/\n\n# Upload para S3\naws s3 cp uploads_backup_$(date +%Y%m%d).tar.gz s3://ubclab-backups/files/\n</code></pre> <p>Para o processo completo de deploy, consulte o Guia de Deploy.</p>"},{"location":"deploy/guia-deploy/","title":"Guia de Deploy","text":""},{"location":"deploy/guia-deploy/#visao-geral","title":"\ud83d\ude80 Vis\u00e3o Geral","text":"<p>Este guia fornece instru\u00e7\u00f5es passo a passo para fazer deploy do UBC Lab BD em diferentes ambientes, desde desenvolvimento local at\u00e9 produ\u00e7\u00e3o em escala.</p>"},{"location":"deploy/guia-deploy/#pre-requisitos","title":"\ud83d\udccb Pr\u00e9-requisitos","text":""},{"location":"deploy/guia-deploy/#requisitos-minimos","title":"Requisitos M\u00ednimos","text":""},{"location":"deploy/guia-deploy/#desenvolvimento","title":"Desenvolvimento","text":"<ul> <li>CPU: 2 cores</li> <li>RAM: 4GB</li> <li>Storage: 10GB SSD</li> <li>OS: Linux, macOS, Windows</li> </ul>"},{"location":"deploy/guia-deploy/#producao","title":"Produ\u00e7\u00e3o","text":"<ul> <li>CPU: 4+ cores</li> <li>RAM: 8GB+</li> <li>Storage: 50GB+ SSD</li> <li>OS: Linux (Ubuntu 20.04+ ou CentOS 8+)</li> </ul>"},{"location":"deploy/guia-deploy/#software-necessario","title":"Software Necess\u00e1rio","text":"<ul> <li>Docker &amp; Docker Compose</li> <li>Git</li> <li>Python 3.11+</li> <li>PostgreSQL 15+</li> <li>Redis 7+</li> <li>NGINX (produ\u00e7\u00e3o)</li> </ul>"},{"location":"deploy/guia-deploy/#deploy-local-desenvolvimento","title":"\ud83c\udfe0 Deploy Local (Desenvolvimento)","text":""},{"location":"deploy/guia-deploy/#1-clone-e-configuracao-inicial","title":"1. Clone e Configura\u00e7\u00e3o Inicial","text":"<pre><code># Clone do reposit\u00f3rio\ngit clone https://github.com/lucascard/ubc-lab-bd.git\ncd ubc-lab-bd\n\n# Configurar ambiente\ncp .env.example .env.development\n</code></pre>"},{"location":"deploy/guia-deploy/#2-usando-docker-compose","title":"2. Usando Docker Compose","text":"<pre><code># Build e start dos servi\u00e7os\ndocker-compose -f docker-compose.development.yml up --build\n\n# Verificar status\ndocker-compose ps\n\n# Logs em tempo real\ndocker-compose logs -f app\n</code></pre>"},{"location":"deploy/guia-deploy/#3-configuracao-manual","title":"3. Configura\u00e7\u00e3o Manual","text":"<pre><code># Criar ambiente virtual\npython -m venv venv\nsource venv/bin/activate  # Linux/Mac\n# ou\nvenv\\Scripts\\activate     # Windows\n\n# Instalar depend\u00eancias\npip install -r requirements.txt\n\n# Configurar banco de dados\ncreatedb ubclab_dev\npython manage.py migrate\n\n# Criar superusu\u00e1rio\npython manage.py createsuperuser\n\n# Iniciar servidor\npython manage.py runserver\n</code></pre>"},{"location":"deploy/guia-deploy/#4-verificacao","title":"4. Verifica\u00e7\u00e3o","text":"<pre><code># Verificar API\ncurl http://localhost:8000/health\n\n# Verificar banco de dados\npython manage.py dbshell\n</code></pre>"},{"location":"deploy/guia-deploy/#deploy-staging","title":"\ud83e\uddea Deploy Staging","text":""},{"location":"deploy/guia-deploy/#1-configuracao-do-servidor","title":"1. Configura\u00e7\u00e3o do Servidor","text":"<pre><code># Atualizar sistema\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# Instalar Docker\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\nsudo usermod -aG docker $USER\n\n# Instalar Docker Compose\nsudo pip3 install docker-compose\n\n# Configurar firewall\nsudo ufw allow 22\nsudo ufw allow 80\nsudo ufw allow 443\nsudo ufw enable\n</code></pre>"},{"location":"deploy/guia-deploy/#2-deploy-da-aplicacao","title":"2. Deploy da Aplica\u00e7\u00e3o","text":"<pre><code># Clone do c\u00f3digo\ngit clone https://github.com/lucascard/ubc-lab-bd.git\ncd ubc-lab-bd\n\n# Checkout para branch de staging\ngit checkout staging\n\n# Configurar vari\u00e1veis\ncp .env.example .env.staging\nnano .env.staging\n\n# Deploy\ndocker-compose -f docker-compose.staging.yml up -d\n\n# Verificar status\ndocker-compose -f docker-compose.staging.yml ps\n</code></pre>"},{"location":"deploy/guia-deploy/#3-configuracao-ssl","title":"3. Configura\u00e7\u00e3o SSL","text":"<pre><code># Instalar Certbot\nsudo apt install certbot python3-certbot-nginx\n\n# Obter certificado\nsudo certbot --nginx -d staging.ubclab.example.com\n\n# Renova\u00e7\u00e3o autom\u00e1tica\nsudo crontab -e\n# Adicionar: 0 12 * * * /usr/bin/certbot renew --quiet\n</code></pre>"},{"location":"deploy/guia-deploy/#deploy-producao","title":"\ud83c\udf0d Deploy Produ\u00e7\u00e3o","text":""},{"location":"deploy/guia-deploy/#opcao-1-servidor-unico","title":"Op\u00e7\u00e3o 1: Servidor \u00danico","text":""},{"location":"deploy/guia-deploy/#1-preparacao-do-servidor","title":"1. Prepara\u00e7\u00e3o do Servidor","text":"<pre><code># Configura\u00e7\u00e3o inicial (como root)\nadduser ubclab\nusermod -aG sudo ubclab\nsu - ubclab\n\n# Configura\u00e7\u00e3o de seguran\u00e7a\nsudo nano /etc/ssh/sshd_config\n# PermitRootLogin no\n# PasswordAuthentication no\nsudo systemctl restart ssh\n\n# Firewall\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw allow ssh\nsudo ufw allow 80\nsudo ufw allow 443\nsudo ufw enable\n</code></pre>"},{"location":"deploy/guia-deploy/#2-instalacao-de-dependencias","title":"2. Instala\u00e7\u00e3o de Depend\u00eancias","text":"<pre><code># Docker\ncurl -fsSL https://get.docker.com | sh\nsudo usermod -aG docker ubclab\n\n# NGINX\nsudo apt install nginx\n\n# Certbot\nsudo apt install certbot python3-certbot-nginx\n\n# Monitoring tools\nsudo apt install htop iotop nethogs\n</code></pre>"},{"location":"deploy/guia-deploy/#3-deploy-da-aplicacao","title":"3. Deploy da Aplica\u00e7\u00e3o","text":"<pre><code># Clone e configura\u00e7\u00e3o\ngit clone https://github.com/lucascard/ubc-lab-bd.git\ncd ubc-lab-bd\ngit checkout main\n\n# Configura\u00e7\u00e3o de produ\u00e7\u00e3o\ncp .env.example .env.production\nnano .env.production\n\n# Secrets (N\u00c3O versionar)\necho \"SECRET_KEY=$(openssl rand -hex 32)\" &gt;&gt; .env.production\necho \"JWT_SECRET_KEY=$(openssl rand -hex 32)\" &gt;&gt; .env.production\n\n# Deploy\ndocker-compose -f docker-compose.production.yml up -d\n\n# Migrations\ndocker-compose exec app python manage.py migrate\n\n# Criar superusu\u00e1rio\ndocker-compose exec app python manage.py createsuperuser\n</code></pre>"},{"location":"deploy/guia-deploy/#4-configuracao-nginx","title":"4. Configura\u00e7\u00e3o NGINX","text":"<pre><code># Configurar NGINX\nsudo nano /etc/nginx/sites-available/ubclab\n\n# Ativar site\nsudo ln -s /etc/nginx/sites-available/ubclab /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n\n# SSL\nsudo certbot --nginx -d ubclab.example.com\n</code></pre>"},{"location":"deploy/guia-deploy/#opcao-2-kubernetes","title":"Op\u00e7\u00e3o 2: Kubernetes","text":""},{"location":"deploy/guia-deploy/#1-preparacao-do-cluster","title":"1. Prepara\u00e7\u00e3o do Cluster","text":"<pre><code># Instalar kubectl\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n\n# Configurar cluster (exemplo com minikube)\nminikube start --driver=docker --memory=4096 --cpus=2\n</code></pre>"},{"location":"deploy/guia-deploy/#2-deploy-no-kubernetes","title":"2. Deploy no Kubernetes","text":"<pre><code># Criar namespace\nkubectl create namespace ubclab\n\n# Configurar secrets\nkubectl create secret generic ubclab-secrets \\\n  --from-literal=database-url=\"postgresql://...\" \\\n  --from-literal=jwt-secret=\"...\" \\\n  --namespace=ubclab\n\n# Deploy\nkubectl apply -f k8s/ -n ubclab\n\n# Verificar status\nkubectl get pods -n ubclab\nkubectl get services -n ubclab\n</code></pre>"},{"location":"deploy/guia-deploy/#3-configuracao-de-ingress","title":"3. Configura\u00e7\u00e3o de Ingress","text":"<pre><code># k8s/ingress.yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ubclab-ingress\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\n    cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\nspec:\n  tls:\n  - hosts:\n    - ubclab.example.com\n    secretName: ubclab-tls\n  rules:\n  - host: ubclab.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: ubclab-service\n            port:\n              number: 80\n</code></pre>"},{"location":"deploy/guia-deploy/#opcao-3-cloud-aws","title":"Op\u00e7\u00e3o 3: Cloud (AWS)","text":""},{"location":"deploy/guia-deploy/#1-usando-aws-ecs","title":"1. Usando AWS ECS","text":"<pre><code># Instalar AWS CLI\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install\n\n# Configurar credenciais\naws configure\n\n# Criar cluster ECS\naws ecs create-cluster --cluster-name ubclab-cluster\n\n# Deploy usando CloudFormation\naws cloudformation deploy \\\n  --template-file cloudformation-template.yaml \\\n  --stack-name ubclab-stack \\\n  --parameter-overrides \\\n    DBPassword=secure_password \\\n    AppImage=ubclab/app:latest\n</code></pre>"},{"location":"deploy/guia-deploy/#2-usando-aws-eks","title":"2. Usando AWS EKS","text":"<pre><code># Instalar eksctl\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nsudo mv /tmp/eksctl /usr/local/bin\n\n# Criar cluster\neksctl create cluster --name ubclab-cluster --region us-east-1\n\n# Deploy\nkubectl apply -f k8s-aws/\n</code></pre>"},{"location":"deploy/guia-deploy/#cicd-pipeline","title":"\ud83d\udd04 CI/CD Pipeline","text":""},{"location":"deploy/guia-deploy/#github-actions","title":"GitHub Actions","text":"<pre><code># .github/workflows/deploy.yml\nname: Deploy to Production\n\non:\n  push:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n\n    - name: Set up Python\n      uses: actions/setup-python@v2\n      with:\n        python-version: 3.11\n\n    - name: Install dependencies\n      run: |\n        pip install -r requirements.txt\n        pip install pytest pytest-cov\n\n    - name: Run tests\n      run: pytest --cov=src tests/\n\n    - name: Security scan\n      run: |\n        pip install bandit safety\n        bandit -r src/\n        safety check\n\n  build:\n    needs: test\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n\n    - name: Build Docker image\n      run: |\n        docker build -t ubclab/app:${{ github.sha }} .\n        docker tag ubclab/app:${{ github.sha }} ubclab/app:latest\n\n    - name: Push to registry\n      env:\n        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}\n        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}\n      run: |\n        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin\n        docker push ubclab/app:${{ github.sha }}\n        docker push ubclab/app:latest\n\n  deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    steps:\n    - name: Deploy to production\n      env:\n        HOST: ${{ secrets.PRODUCTION_HOST }}\n        USERNAME: ${{ secrets.PRODUCTION_USERNAME }}\n        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n      run: |\n        echo \"$SSH_KEY\" &gt; private_key\n        chmod 600 private_key\n        ssh -i private_key -o StrictHostKeyChecking=no $USERNAME@$HOST '\n          cd /opt/ubclab &amp;&amp;\n          git pull origin main &amp;&amp;\n          docker-compose pull &amp;&amp;\n          docker-compose up -d &amp;&amp;\n          docker system prune -f\n        '\n</code></pre>"},{"location":"deploy/guia-deploy/#verificacao-e-monitoramento","title":"\ud83d\udd0d Verifica\u00e7\u00e3o e Monitoramento","text":""},{"location":"deploy/guia-deploy/#health-checks","title":"Health Checks","text":"<pre><code># Verificar API\ncurl -f http://localhost:8000/health || exit 1\n\n# Verificar banco de dados\ndocker-compose exec db pg_isready -U ubclab\n\n# Verificar Redis\ndocker-compose exec redis redis-cli ping\n\n# Verificar logs\ndocker-compose logs --tail=50 app\n</code></pre>"},{"location":"deploy/guia-deploy/#metricas-de-sistema","title":"M\u00e9tricas de Sistema","text":"<pre><code># CPU e Mem\u00f3ria\ndocker stats\n\n# Espa\u00e7o em disco\ndf -h\n\n# Conex\u00f5es de rede\nnetstat -tuln\n\n# Logs do sistema\njournalctl -u docker -f\n</code></pre>"},{"location":"deploy/guia-deploy/#alertas-basicos","title":"Alertas B\u00e1sicos","text":"<pre><code># Script de monitoramento simples\n#!/bin/bash\n# monitor.sh\n\n# Verificar se a aplica\u00e7\u00e3o est\u00e1 respondendo\nif ! curl -sf http://localhost:8000/health &gt; /dev/null; then\n    echo \"ALERT: Application is not responding\" | mail -s \"UBC Lab Alert\" admin@ubclab.com\nfi\n\n# Verificar uso de disco\nDISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')\nif [ $DISK_USAGE -gt 80 ]; then\n    echo \"ALERT: Disk usage is ${DISK_USAGE}%\" | mail -s \"Disk Space Alert\" admin@ubclab.com\nfi\n\n# Adicionar ao crontab\n# */5 * * * * /home/ubclab/monitor.sh\n</code></pre>"},{"location":"deploy/guia-deploy/#backup-e-recovery","title":"\ud83d\udd04 Backup e Recovery","text":""},{"location":"deploy/guia-deploy/#backup-automatizado","title":"Backup Automatizado","text":"<pre><code>#!/bin/bash\n# backup.sh\n\nDATE=$(date +%Y%m%d_%H%M%S)\n\n# Backup do banco de dados\ndocker-compose exec -T db pg_dump -U ubclab ubclab &gt; backup_db_${DATE}.sql\n\n# Backup de arquivos\ntar -czf backup_files_${DATE}.tar.gz /opt/ubclab/uploads/\n\n# Upload para S3 (se configurado)\nif [ ! -z \"$AWS_S3_BUCKET\" ]; then\n    aws s3 cp backup_db_${DATE}.sql s3://$AWS_S3_BUCKET/backups/\n    aws s3 cp backup_files_${DATE}.tar.gz s3://$AWS_S3_BUCKET/backups/\nfi\n\n# Limpeza local (manter 7 dias)\nfind . -name \"backup_*\" -mtime +7 -delete\n</code></pre>"},{"location":"deploy/guia-deploy/#recovery","title":"Recovery","text":"<pre><code># Restaurar banco de dados\ndocker-compose exec -T db psql -U ubclab ubclab &lt; backup_db_20241208_120000.sql\n\n# Restaurar arquivos\ntar -xzf backup_files_20241208_120000.tar.gz -C /\n\n# Reiniciar servi\u00e7os\ndocker-compose restart\n</code></pre>"},{"location":"deploy/guia-deploy/#troubleshooting","title":"\ud83d\udea8 Troubleshooting","text":""},{"location":"deploy/guia-deploy/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"deploy/guia-deploy/#1-container-nao-inicia","title":"1. Container n\u00e3o inicia","text":"<pre><code># Verificar logs\ndocker-compose logs app\n\n# Verificar recursos\ndocker system df\ndocker system prune\n\n# Reconstruir imagem\ndocker-compose build --no-cache app\n</code></pre>"},{"location":"deploy/guia-deploy/#2-banco-de-dados-nao-conecta","title":"2. Banco de dados n\u00e3o conecta","text":"<pre><code># Verificar status\ndocker-compose exec db pg_isready\n\n# Verificar configura\u00e7\u00e3o\ndocker-compose exec app env | grep DATABASE\n\n# Resetar banco\ndocker-compose down\ndocker volume rm ubclab_postgres_data\ndocker-compose up -d\n</code></pre>"},{"location":"deploy/guia-deploy/#3-performance-baixa","title":"3. Performance baixa","text":"<pre><code># Verificar recursos\nhtop\niotop\ndocker stats\n\n# Verificar logs de slow queries\ndocker-compose exec db tail -f /var/log/postgresql/postgresql.log\n\n# Otimizar banco\ndocker-compose exec db psql -U ubclab -c \"VACUUM ANALYZE;\"\n</code></pre>"},{"location":"deploy/guia-deploy/#scaling","title":"\ud83d\udcca Scaling","text":""},{"location":"deploy/guia-deploy/#horizontal-scaling","title":"Horizontal Scaling","text":"<pre><code># docker-compose.scale.yml\nversion: '3.8'\nservices:\n  app:\n    deploy:\n      replicas: 3\n\n  nginx:\n    image: nginx:alpine\n    depends_on:\n      - app\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx-load-balancer.conf:/etc/nginx/nginx.conf\n</code></pre>"},{"location":"deploy/guia-deploy/#database-scaling","title":"Database Scaling","text":"<pre><code># Adicionar read replicas\ndb-replica:\n  image: postgres:15\n  environment:\n    POSTGRES_DB: ubclab\n    POSTGRES_USER: ubclab\n    POSTGRES_PASSWORD: password\n    POSTGRES_MASTER_SERVICE: db\n  command: |\n    postgres\n    -c wal_level=replica\n    -c hot_standby=on\n    -c max_wal_senders=3\n    -c max_replication_slots=3\n    -c hot_standby_feedback=on\n</code></pre> <p>Para configura\u00e7\u00f5es detalhadas de cada ambiente, consulte a se\u00e7\u00e3o Configura\u00e7\u00e3o.</p>"},{"location":"desenvolvimento/configuracao-ambiente/","title":"Configura\u00e7\u00e3o do Ambiente de Desenvolvimento","text":""},{"location":"desenvolvimento/configuracao-ambiente/#pre-requisitos","title":"\ud83d\udccb Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, certifique-se de ter os seguintes softwares instalados:</p>"},{"location":"desenvolvimento/configuracao-ambiente/#obrigatorios","title":"Obrigat\u00f3rios","text":"<ul> <li>Python 3.8+: Linguagem principal do projeto</li> <li>Git: Para controle de vers\u00e3o</li> <li>Docker: Para containeriza\u00e7\u00e3o (opcional, mas recomendado)</li> </ul>"},{"location":"desenvolvimento/configuracao-ambiente/#recomendados","title":"Recomendados","text":"<ul> <li>Visual Studio Code: Editor de c\u00f3digo recomendado</li> <li>PostgreSQL: Banco de dados para desenvolvimento local</li> <li>Node.js 16+: Para ferramentas de front-end</li> </ul>"},{"location":"desenvolvimento/configuracao-ambiente/#configuracao-inicial","title":"\ud83d\ude80 Configura\u00e7\u00e3o Inicial","text":""},{"location":"desenvolvimento/configuracao-ambiente/#1-clone-do-repositorio","title":"1. Clone do Reposit\u00f3rio","text":"<pre><code>git clone https://github.com/lucascard/ubc-lab-bd.git\ncd ubc-lab-bd\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#2-configuracao-do-python","title":"2. Configura\u00e7\u00e3o do Python","text":""},{"location":"desenvolvimento/configuracao-ambiente/#criacao-do-ambiente-virtual","title":"Cria\u00e7\u00e3o do Ambiente Virtual","text":"<pre><code># Windows\npython -m venv venv\nvenv\\Scripts\\activate\n\n# Linux/macOS\npython3 -m venv venv\nsource venv/bin/activate\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#instalacao-das-dependencias","title":"Instala\u00e7\u00e3o das Depend\u00eancias","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#3-configuracao-do-banco-de-dados","title":"3. Configura\u00e7\u00e3o do Banco de Dados","text":""},{"location":"desenvolvimento/configuracao-ambiente/#usando-docker-recomendado","title":"Usando Docker (Recomendado)","text":"<pre><code>docker-compose up -d postgres\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#instalacao-local","title":"Instala\u00e7\u00e3o Local","text":"<ol> <li>Instale o PostgreSQL</li> <li>Crie um banco de dados para o projeto: <pre><code>CREATE DATABASE ubc_lab_bd;\nCREATE USER ubc_user WITH PASSWORD 'senha_segura';\nGRANT ALL PRIVILEGES ON DATABASE ubc_lab_bd TO ubc_user;\n</code></pre></li> </ol>"},{"location":"desenvolvimento/configuracao-ambiente/#4-variaveis-de-ambiente","title":"4. Vari\u00e1veis de Ambiente","text":"<p>Crie um arquivo <code>.env</code> na raiz do projeto:</p> <pre><code># Database\nDATABASE_URL=postgresql://ubc_user:senha_segura@localhost/ubc_lab_bd\n\n# Development\nDEBUG=True\nSECRET_KEY=sua_chave_secreta_aqui\n\n# API Keys (se necess\u00e1rio)\nAPI_KEY=sua_api_key_aqui\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#ferramentas-de-desenvolvimento","title":"\ud83d\udee0\ufe0f Ferramentas de Desenvolvimento","text":""},{"location":"desenvolvimento/configuracao-ambiente/#editor-de-codigo","title":"Editor de C\u00f3digo","text":"<p>Configura\u00e7\u00e3o recomendada para VS Code:</p> <ol> <li>Instale as seguintes extens\u00f5es:</li> <li>Python</li> <li>GitLens</li> <li>Docker</li> <li> <p>PostgreSQL</p> </li> <li> <p>Configure o arquivo <code>.vscode/settings.json</code>: <pre><code>{\n    \"python.defaultInterpreterPath\": \"./venv/bin/python\",\n    \"python.linting.enabled\": true,\n    \"python.linting.pylintEnabled\": true,\n    \"python.formatting.provider\": \"black\"\n}\n</code></pre></p> </li> </ol>"},{"location":"desenvolvimento/configuracao-ambiente/#linting-e-formatacao","title":"Linting e Formata\u00e7\u00e3o","text":"<pre><code># Instalar ferramentas de qualidade de c\u00f3digo\npip install black pylint pytest\n\n# Configurar pre-commit hooks\npre-commit install\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#execucao-dos-testes","title":"\ud83e\uddea Execu\u00e7\u00e3o dos Testes","text":""},{"location":"desenvolvimento/configuracao-ambiente/#testes-unitarios","title":"Testes Unit\u00e1rios","text":"<pre><code>pytest tests/\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#testes-de-integracao","title":"Testes de Integra\u00e7\u00e3o","text":"<pre><code>pytest tests/integration/\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#cobertura-de-codigo","title":"Cobertura de C\u00f3digo","text":"<pre><code>pytest --cov=src tests/\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#executando-o-projeto","title":"\ud83c\udfc3\u200d\u2642\ufe0f Executando o Projeto","text":""},{"location":"desenvolvimento/configuracao-ambiente/#desenvolvimento","title":"Desenvolvimento","text":"<pre><code># Backend\npython manage.py runserver\n\n# Frontend (se aplic\u00e1vel)\nnpm run dev\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#usando-docker","title":"Usando Docker","text":"<pre><code>docker-compose up\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#resolucao-de-problemas-comuns","title":"\ud83d\udc1b Resolu\u00e7\u00e3o de Problemas Comuns","text":""},{"location":"desenvolvimento/configuracao-ambiente/#erro-de-conexao-com-banco-de-dados","title":"Erro de Conex\u00e3o com Banco de Dados","text":"<ul> <li>Verifique se o PostgreSQL est\u00e1 rodando</li> <li>Confirme as credenciais no arquivo <code>.env</code></li> <li>Teste a conex\u00e3o manualmente</li> </ul>"},{"location":"desenvolvimento/configuracao-ambiente/#problemas-com-dependencias","title":"Problemas com Depend\u00eancias","text":"<pre><code># Limpar cache do pip\npip cache purge\n\n# Reinstalar depend\u00eancias\npip uninstall -r requirements.txt -y\npip install -r requirements.txt\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#problemas-com-docker","title":"Problemas com Docker","text":"<pre><code># Limpar containers e volumes\ndocker-compose down -v\ndocker-compose up --build\n</code></pre>"},{"location":"desenvolvimento/configuracao-ambiente/#recursos-adicionais","title":"\ud83d\udcda Recursos Adicionais","text":"<ul> <li>Documenta\u00e7\u00e3o do Python</li> <li>Guia do PostgreSQL</li> <li>Docker Documentation</li> </ul> <p>Ap\u00f3s configurar o ambiente, consulte o Guia de Contribui\u00e7\u00e3o para entender o workflow de desenvolvimento.</p>"},{"location":"desenvolvimento/guia-contribuicao/","title":"Guia de Contribui\u00e7\u00e3o","text":""},{"location":"desenvolvimento/guia-contribuicao/#como-contribuir","title":"\ud83e\udd1d Como Contribuir","text":"<p>Agradecemos seu interesse em contribuir para o projeto UBC Lab BD! Este guia ir\u00e1 ajud\u00e1-lo a entender como participar do desenvolvimento.</p>"},{"location":"desenvolvimento/guia-contribuicao/#tipos-de-contribuicao","title":"\ud83d\udccb Tipos de Contribui\u00e7\u00e3o","text":""},{"location":"desenvolvimento/guia-contribuicao/#reportar-bugs","title":"\ud83d\udc1b Reportar Bugs","text":"<ol> <li>Verifique se o bug j\u00e1 foi reportado nas Issues</li> <li>Se n\u00e3o encontrar, crie uma nova issue com:</li> <li>Descri\u00e7\u00e3o clara do problema</li> <li>Passos para reproduzir</li> <li>Comportamento esperado vs atual</li> <li>Screenshots (se aplic\u00e1vel)</li> <li>Informa\u00e7\u00f5es do ambiente</li> </ol>"},{"location":"desenvolvimento/guia-contribuicao/#sugerir-melhorias","title":"\ud83d\udca1 Sugerir Melhorias","text":"<ul> <li>Abra uma issue com o label \"enhancement\"</li> <li>Descreva claramente a funcionalidade proposta</li> <li>Explique por que seria \u00fatil para o projeto</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#contribuir-com-codigo","title":"\ud83d\udd27 Contribuir com C\u00f3digo","text":"<ol> <li>Fa\u00e7a um fork do reposit\u00f3rio</li> <li>Crie uma branch para sua feature/corre\u00e7\u00e3o</li> <li>Implemente suas mudan\u00e7as</li> <li>Escreva testes para suas mudan\u00e7as</li> <li>Execute os testes e certifique-se de que passam</li> <li>Abra um Pull Request</li> </ol>"},{"location":"desenvolvimento/guia-contribuicao/#workflow-de-desenvolvimento","title":"\ud83c\udf3f Workflow de Desenvolvimento","text":""},{"location":"desenvolvimento/guia-contribuicao/#1-preparacao","title":"1. Prepara\u00e7\u00e3o","text":"<pre><code># Fork e clone do reposit\u00f3rio\ngit clone https://github.com/SEU_USUARIO/ubc-lab-bd.git\ncd ubc-lab-bd\n\n# Adicione o reposit\u00f3rio upstream\ngit remote add upstream https://github.com/lucascard/ubc-lab-bd.git\n\n# Configure o ambiente (veja configuracao-ambiente.md)\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#2-criacao-de-branch","title":"2. Cria\u00e7\u00e3o de Branch","text":"<pre><code># Atualize sua branch main\ngit checkout main\ngit pull upstream main\n\n# Crie uma nova branch\ngit checkout -b feature/nome-da-feature\n# ou\ngit checkout -b fix/nome-do-bug\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#3-desenvolvimento","title":"3. Desenvolvimento","text":"<ul> <li>Fa\u00e7a commits pequenos e com mensagens descritivas</li> <li>Siga os padr\u00f5es de c\u00f3digo estabelecidos</li> <li>Escreva testes para novas funcionalidades</li> <li>Atualize a documenta\u00e7\u00e3o quando necess\u00e1rio</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#4-testes","title":"4. Testes","text":"<pre><code># Execute todos os testes\npytest\n\n# Verifique a cobertura\npytest --cov=src\n\n# Execute linting\npylint src/\nblack src/\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#5-pull-request","title":"5. Pull Request","text":"<ol> <li>Push sua branch para seu fork</li> <li>Abra um PR no reposit\u00f3rio principal</li> <li>Preencha o template do PR</li> <li>Aguarde o review</li> </ol>"},{"location":"desenvolvimento/guia-contribuicao/#padroes-de-codigo","title":"\ud83d\udcdd Padr\u00f5es de C\u00f3digo","text":""},{"location":"desenvolvimento/guia-contribuicao/#convencoes-de-naming","title":"Conven\u00e7\u00f5es de Naming","text":"<ul> <li>Arquivos: snake_case</li> <li>Classes: PascalCase</li> <li>Fun\u00e7\u00f5es/Vari\u00e1veis: snake_case</li> <li>Constantes: UPPER_SNAKE_CASE</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#estrutura-de-commits","title":"Estrutura de Commits","text":"<pre><code>tipo(escopo): descri\u00e7\u00e3o breve\n\nDescri\u00e7\u00e3o mais detalhada se necess\u00e1rio.\n\nResolve #123\n</code></pre> <p>Tipos de commit: - <code>feat</code>: nova funcionalidade - <code>fix</code>: corre\u00e7\u00e3o de bug - <code>docs</code>: documenta\u00e7\u00e3o - <code>style</code>: formata\u00e7\u00e3o - <code>refactor</code>: refatora\u00e7\u00e3o - <code>test</code>: testes - <code>chore</code>: tarefas de manuten\u00e7\u00e3o</p>"},{"location":"desenvolvimento/guia-contribuicao/#exemplo","title":"Exemplo:","text":"<pre><code>feat(api): adiciona endpoint para listar usu\u00e1rios\n\nImplementa GET /api/users com pagina\u00e7\u00e3o e filtros.\nInclui valida\u00e7\u00e3o de par\u00e2metros e testes unit\u00e1rios.\n\nResolve #45\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#testes","title":"\ud83e\uddea Testes","text":""},{"location":"desenvolvimento/guia-contribuicao/#tipos-de-testes","title":"Tipos de Testes","text":"<ul> <li>Unit\u00e1rios: Testam componentes isolados</li> <li>Integra\u00e7\u00e3o: Testam intera\u00e7\u00e3o entre componentes</li> <li>End-to-End: Testam fluxos completos</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#estrutura-de-testes","title":"Estrutura de Testes","text":"<pre><code>tests/\n\u251c\u2500\u2500 unit/\n\u2502   \u251c\u2500\u2500 test_models.py\n\u2502   \u2514\u2500\u2500 test_services.py\n\u251c\u2500\u2500 integration/\n\u2502   \u2514\u2500\u2500 test_api.py\n\u2514\u2500\u2500 e2e/\n    \u2514\u2500\u2500 test_user_flow.py\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#padroes-de-testes","title":"Padr\u00f5es de Testes","text":"<pre><code>def test_funcao_deve_retornar_resultado_esperado():\n    # Arrange\n    input_data = {\"key\": \"value\"}\n    expected_result = \"expected\"\n\n    # Act\n    result = funcao_testada(input_data)\n\n    # Assert\n    assert result == expected_result\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#documentacao","title":"\ud83d\udcda Documenta\u00e7\u00e3o","text":""},{"location":"desenvolvimento/guia-contribuicao/#docstrings","title":"Docstrings","text":"<pre><code>def processar_dados(dados: List[Dict]) -&gt; Dict:\n    \"\"\"\n    Processa uma lista de dados e retorna estat\u00edsticas.\n\n    Args:\n        dados: Lista de dicion\u00e1rios com dados para processar\n\n    Returns:\n        Dicion\u00e1rio com estat\u00edsticas processadas\n\n    Raises:\n        ValueError: Se dados estiver vazio\n    \"\"\"\n    pass\n</code></pre>"},{"location":"desenvolvimento/guia-contribuicao/#documentacao-de-api","title":"Documenta\u00e7\u00e3o de API","text":"<ul> <li>Use docstrings para documentar endpoints</li> <li>Inclua exemplos de request/response</li> <li>Documente c\u00f3digos de erro poss\u00edveis</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#code-review","title":"\ud83d\udd0d Code Review","text":""},{"location":"desenvolvimento/guia-contribuicao/#checklist-do-revisor","title":"Checklist do Revisor","text":"<ul> <li> C\u00f3digo segue os padr\u00f5es estabelecidos</li> <li> Testes adequados foram escritos</li> <li> Documenta\u00e7\u00e3o foi atualizada</li> <li> N\u00e3o h\u00e1 vazamentos de seguran\u00e7a</li> <li> Performance foi considerada</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#checklist-do-autor","title":"Checklist do Autor","text":"<ul> <li> C\u00f3digo foi testado localmente</li> <li> Testes passam</li> <li> Documenta\u00e7\u00e3o est\u00e1 atualizada</li> <li> PR tem descri\u00e7\u00e3o clara</li> <li> Commits s\u00e3o bem organizados</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#release-process","title":"\ud83d\ude80 Release Process","text":"<ol> <li>Feature Freeze: N\u00e3o aceitar novas features</li> <li>Testing: Testes extensivos em staging</li> <li>Documentation: Atualizar changelog e docs</li> <li>Release: Tag e deploy para produ\u00e7\u00e3o</li> </ol>"},{"location":"desenvolvimento/guia-contribuicao/#precisa-de-ajuda","title":"\ud83c\udd98 Precisa de Ajuda?","text":"<ul> <li>D\u00favidas Gerais: Abra uma issue com label \"question\"</li> <li>Chat: Entre em contato via [canal do projeto]</li> <li>Email: contato@ubclab.exemplo.com</li> </ul>"},{"location":"desenvolvimento/guia-contribuicao/#codigo-de-conduta","title":"\ud83d\udcdc C\u00f3digo de Conduta","text":"<p>Este projeto segue o Contributor Covenant. Seja respeitoso e construtivo em todas as intera\u00e7\u00f5es.</p> <p>Obrigado por contribuir para o UBC Lab BD! \ud83d\ude4f</p>"},{"location":"desenvolvimento/padroes-codigo/","title":"Padr\u00f5es de C\u00f3digo","text":""},{"location":"desenvolvimento/padroes-codigo/#convencoes-gerais","title":"\ud83d\udccf Conven\u00e7\u00f5es Gerais","text":""},{"location":"desenvolvimento/padroes-codigo/#formatacao","title":"Formata\u00e7\u00e3o","text":"<ul> <li>Indenta\u00e7\u00e3o: 4 espa\u00e7os (n\u00e3o tabs)</li> <li>Linha m\u00e1xima: 88 caracteres (Black formatter)</li> <li>Encoding: UTF-8</li> <li>Line endings: LF (Unix style)</li> </ul>"},{"location":"desenvolvimento/padroes-codigo/#naming-conventions","title":"Naming Conventions","text":""},{"location":"desenvolvimento/padroes-codigo/#python","title":"Python","text":"<pre><code># Classes: PascalCase\nclass DataProcessor:\n    pass\n\n# Fun\u00e7\u00f5es e vari\u00e1veis: snake_case\ndef process_user_data():\n    user_name = \"exemplo\"\n\n# Constantes: UPPER_SNAKE_CASE\nMAX_RETRY_ATTEMPTS = 3\nDATABASE_URL = \"postgresql://...\"\n\n# M\u00e9todos privados: _leading_underscore\ndef _internal_method(self):\n    pass\n\n# Arquivos e m\u00f3dulos: snake_case\n# user_service.py\n# data_models.py\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#javascripttypescript","title":"JavaScript/TypeScript","text":"<pre><code>// Classes: PascalCase\nclass UserService {\n\n    // M\u00e9todos e vari\u00e1veis: camelCase\n    getUserData() {\n        const userName = 'exemplo';\n    }\n\n    // Constantes: UPPER_SNAKE_CASE\n    static MAX_RETRIES = 3;\n\n    // M\u00e9todos privados: #private ou _protected\n    #processData() {}\n    _helperMethod() {}\n}\n\n// Arquivos: kebab-case\n// user-service.ts\n// data-models.ts\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#python-standards","title":"\ud83d\udc0d Python Standards","text":""},{"location":"desenvolvimento/padroes-codigo/#imports","title":"Imports","text":"<pre><code># Ordem dos imports:\n# 1. Standard library\nimport os\nimport sys\nfrom datetime import datetime\n\n# 2. Third party\nimport requests\nfrom fastapi import FastAPI\n\n# 3. Local imports\nfrom .models import User\nfrom .services import UserService\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#docstrings","title":"Docstrings","text":"<pre><code>def calculate_statistics(data: List[Dict]) -&gt; Dict[str, float]:\n    \"\"\"\n    Calcula estat\u00edsticas b\u00e1sicas de um dataset.\n\n    Args:\n        data: Lista de dicion\u00e1rios contendo os dados para an\u00e1lise.\n              Cada dicion\u00e1rio deve conter chaves num\u00e9ricas.\n\n    Returns:\n        Dicion\u00e1rio contendo as estat\u00edsticas calculadas:\n        - mean: M\u00e9dia dos valores\n        - median: Mediana dos valores\n        - std: Desvio padr\u00e3o\n\n    Raises:\n        ValueError: Se data estiver vazio ou contiver valores inv\u00e1lidos.\n        TypeError: Se data n\u00e3o for uma lista de dicion\u00e1rios.\n\n    Example:\n        &gt;&gt;&gt; data = [{'value': 1}, {'value': 2}, {'value': 3}]\n        &gt;&gt;&gt; stats = calculate_statistics(data)\n        &gt;&gt;&gt; print(stats['mean'])\n        2.0\n    \"\"\"\n    if not data:\n        raise ValueError(\"Data cannot be empty\")\n\n    # Implementation here...\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#type-hints","title":"Type Hints","text":"<pre><code>from typing import List, Dict, Optional, Union\n\ndef process_user_data(\n    user_id: int,\n    data: Dict[str, Union[str, int]],\n    options: Optional[Dict[str, bool]] = None\n) -&gt; List[str]:\n    \"\"\"Process user data and return results.\"\"\"\n    options = options or {}\n    # Implementation...\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#error-handling","title":"Error Handling","text":"<pre><code># Use specific exceptions\ntry:\n    result = risky_operation()\nexcept ValidationError as e:\n    logger.error(f\"Validation failed: {e}\")\n    raise HTTPException(status_code=400, detail=str(e))\nexcept DatabaseError as e:\n    logger.error(f\"Database error: {e}\")\n    raise HTTPException(status_code=500, detail=\"Internal server error\")\n\n# Custom exceptions\nclass DataProcessingError(Exception):\n    \"\"\"Raised when data processing fails.\"\"\"\n\n    def __init__(self, message: str, error_code: str = None):\n        super().__init__(message)\n        self.error_code = error_code\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#database-patterns","title":"\ud83d\uddc4\ufe0f Database Patterns","text":""},{"location":"desenvolvimento/padroes-codigo/#sqlalchemy-models","title":"SQLAlchemy Models","text":"<pre><code>from sqlalchemy import Column, Integer, String, DateTime, ForeignKey\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import relationship\n\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    username = Column(String(50), unique=True, nullable=False)\n    email = Column(String(120), unique=True, nullable=False)\n    created_at = Column(DateTime, default=datetime.utcnow)\n\n    # Relationships\n    datasets = relationship(\"Dataset\", back_populates=\"owner\")\n\n    def __repr__(self):\n        return f\"&lt;User(id={self.id}, username='{self.username}')&gt;\"\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#repository-pattern","title":"Repository Pattern","text":"<pre><code>from abc import ABC, abstractmethod\nfrom typing import List, Optional\n\nclass UserRepository(ABC):\n    @abstractmethod\n    def create(self, user: User) -&gt; User:\n        pass\n\n    @abstractmethod\n    def get_by_id(self, user_id: int) -&gt; Optional[User]:\n        pass\n\n    @abstractmethod\n    def get_all(self) -&gt; List[User]:\n        pass\n\nclass SQLUserRepository(UserRepository):\n    def __init__(self, session: Session):\n        self.session = session\n\n    def create(self, user: User) -&gt; User:\n        self.session.add(user)\n        self.session.commit()\n        return user\n\n    def get_by_id(self, user_id: int) -&gt; Optional[User]:\n        return self.session.query(User).filter_by(id=user_id).first()\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#configuration-management","title":"\ud83d\udd27 Configuration Management","text":""},{"location":"desenvolvimento/padroes-codigo/#environment-variables","title":"Environment Variables","text":"<pre><code>import os\nfrom dataclasses import dataclass\nfrom typing import Optional\n\n@dataclass\nclass Settings:\n    database_url: str = os.getenv(\"DATABASE_URL\", \"sqlite:///app.db\")\n    secret_key: str = os.getenv(\"SECRET_KEY\", \"dev-key\")\n    debug: bool = os.getenv(\"DEBUG\", \"False\").lower() == \"true\"\n    max_connections: int = int(os.getenv(\"MAX_CONNECTIONS\", \"10\"))\n\n    def __post_init__(self):\n        if self.secret_key == \"dev-key\" and not self.debug:\n            raise ValueError(\"Must set SECRET_KEY in production\")\n\nsettings = Settings()\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#logging-standards","title":"\ud83d\udcdd Logging Standards","text":""},{"location":"desenvolvimento/padroes-codigo/#structured-logging","title":"Structured Logging","text":"<pre><code>import structlog\nimport logging\n\n# Configure structured logging\nstructlog.configure(\n    processors=[\n        structlog.stdlib.filter_by_level,\n        structlog.stdlib.add_logger_name,\n        structlog.stdlib.add_log_level,\n        structlog.stdlib.PositionalArgumentsFormatter(),\n        structlog.processors.TimeStamper(fmt=\"iso\"),\n        structlog.processors.StackInfoRenderer(),\n        structlog.processors.format_exc_info,\n        structlog.processors.UnicodeDecoder(),\n        structlog.processors.JSONRenderer()\n    ],\n    context_class=dict,\n    logger_factory=structlog.stdlib.LoggerFactory(),\n    wrapper_class=structlog.stdlib.BoundLogger,\n    cache_logger_on_first_use=True,\n)\n\nlogger = structlog.get_logger(__name__)\n\n# Usage\nlogger.info(\n    \"User login\",\n    user_id=user.id,\n    ip_address=request.remote_addr,\n    user_agent=request.headers.get(\"User-Agent\")\n)\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#testing-standards","title":"\ud83e\uddea Testing Standards","text":""},{"location":"desenvolvimento/padroes-codigo/#unit-tests","title":"Unit Tests","text":"<pre><code>import pytest\nfrom unittest.mock import Mock, patch\n\nclass TestUserService:\n    @pytest.fixture\n    def user_service(self):\n        return UserService(repository=Mock())\n\n    @pytest.fixture\n    def sample_user(self):\n        return User(id=1, username=\"test\", email=\"test@example.com\")\n\n    def test_create_user_success(self, user_service, sample_user):\n        # Arrange\n        user_service.repository.create.return_value = sample_user\n\n        # Act\n        result = user_service.create_user(\n            username=\"test\",\n            email=\"test@example.com\"\n        )\n\n        # Assert\n        assert result.username == \"test\"\n        user_service.repository.create.assert_called_once()\n\n    def test_create_user_duplicate_email_raises_error(self, user_service):\n        # Arrange\n        user_service.repository.create.side_effect = IntegrityError(\"\", \"\", \"\")\n\n        # Act &amp; Assert\n        with pytest.raises(ValidationError, match=\"Email already exists\"):\n            user_service.create_user(\"test\", \"existing@example.com\")\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#integration-tests","title":"Integration Tests","text":"<pre><code>@pytest.mark.integration\nclass TestUserAPI:\n    def test_create_user_endpoint(self, client, db_session):\n        # Arrange\n        user_data = {\n            \"username\": \"testuser\",\n            \"email\": \"test@example.com\",\n            \"password\": \"securepass123\"\n        }\n\n        # Act\n        response = client.post(\"/api/users\", json=user_data)\n\n        # Assert\n        assert response.status_code == 201\n        assert response.json()[\"username\"] == \"testuser\"\n\n        # Verify in database\n        user = db_session.query(User).filter_by(username=\"testuser\").first()\n        assert user is not None\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#security-standards","title":"\ud83d\udd12 Security Standards","text":""},{"location":"desenvolvimento/padroes-codigo/#input-validation","title":"Input Validation","text":"<pre><code>from pydantic import BaseModel, validator, EmailStr\n\nclass UserCreateRequest(BaseModel):\n    username: str\n    email: EmailStr\n    password: str\n\n    @validator('username')\n    def validate_username(cls, v):\n        if len(v) &lt; 3:\n            raise ValueError('Username must be at least 3 characters')\n        if not v.isalnum():\n            raise ValueError('Username must be alphanumeric')\n        return v\n\n    @validator('password')\n    def validate_password(cls, v):\n        if len(v) &lt; 8:\n            raise ValueError('Password must be at least 8 characters')\n        return v\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#sql-injection-prevention","title":"SQL Injection Prevention","text":"<pre><code># \u2705 Good - Using parameterized queries\ndef get_user_by_id(db: Session, user_id: int) -&gt; User:\n    return db.query(User).filter(User.id == user_id).first()\n\n# \u2705 Good - Using SQLAlchemy ORM\ndef search_users(db: Session, query: str) -&gt; List[User]:\n    return db.query(User).filter(\n        User.username.ilike(f\"%{query}%\")\n    ).all()\n\n# \u274c Bad - String concatenation (vulnerable to SQL injection)\ndef bad_search_users(db: Session, query: str) -&gt; List[User]:\n    sql = f\"SELECT * FROM users WHERE username LIKE '%{query}%'\"\n    return db.execute(sql).fetchall()\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#performance-guidelines","title":"\ud83d\udcca Performance Guidelines","text":""},{"location":"desenvolvimento/padroes-codigo/#database-queries","title":"Database Queries","text":"<pre><code># \u2705 Good - Eager loading for known relationships\nusers = db.query(User).options(\n    joinedload(User.datasets)\n).all()\n\n# \u2705 Good - Using indexes and filters\nusers = db.query(User).filter(\n    User.created_at &gt;= start_date,\n    User.is_active == True\n).limit(100)\n\n# \u274c Bad - N+1 query problem\nusers = db.query(User).all()\nfor user in users:\n    print(user.datasets)  # This will trigger one query per user\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#caching","title":"Caching","text":"<pre><code>from functools import lru_cache\nimport redis\n\n# Simple in-memory cache\n@lru_cache(maxsize=128)\ndef get_user_permissions(user_id: int) -&gt; List[str]:\n    # Expensive operation\n    return calculate_permissions(user_id)\n\n# Redis cache with TTL\ndef get_cached_data(key: str) -&gt; Optional[Dict]:\n    try:\n        data = redis_client.get(key)\n        return json.loads(data) if data else None\n    except Exception as e:\n        logger.error(f\"Cache error: {e}\")\n        return None\n\ndef set_cached_data(key: str, data: Dict, ttl: int = 3600):\n    try:\n        redis_client.setex(key, ttl, json.dumps(data))\n    except Exception as e:\n        logger.error(f\"Cache error: {e}\")\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#code-quality-tools","title":"\ud83d\udd0d Code Quality Tools","text":""},{"location":"desenvolvimento/padroes-codigo/#formatters","title":"Formatters","text":"<pre><code># Black - Code formatter\nblack src/ tests/\n\n# isort - Import sorter\nisort src/ tests/\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#linters","title":"Linters","text":"<pre><code># pylint - Static analysis\npylint src/\n\n# flake8 - Style guide enforcement\nflake8 src/\n\n# mypy - Type checking\nmypy src/\n</code></pre>"},{"location":"desenvolvimento/padroes-codigo/#pre-commit-configuration","title":"Pre-commit Configuration","text":"<pre><code># .pre-commit-config.yaml\nrepos:\n  - repo: https://github.com/psf/black\n    rev: 22.3.0\n    hooks:\n      - id: black\n\n  - repo: https://github.com/pycqa/isort\n    rev: 5.10.1\n    hooks:\n      - id: isort\n\n  - repo: https://github.com/pycqa/flake8\n    rev: 4.0.1\n    hooks:\n      - id: flake8\n</code></pre> <p>Estes padr\u00f5es s\u00e3o fundamentais para manter a qualidade e consist\u00eancia do c\u00f3digo. Para mais detalhes sobre o processo de desenvolvimento, consulte o Guia de Contribui\u00e7\u00e3o.</p>"},{"location":"sobre/arquitetura/","title":"Arquitetura do Sistema","text":""},{"location":"sobre/arquitetura/#visao-geral-da-arquitetura","title":"\ud83c\udfd7\ufe0f Vis\u00e3o Geral da Arquitetura","text":"<p>O UBC Lab BD segue uma arquitetura modular e escal\u00e1vel, baseada em microsservi\u00e7os e princ\u00edpios de design modernos.</p>"},{"location":"sobre/arquitetura/#diagrama-de-arquitetura","title":"\ud83d\udcca Diagrama de Arquitetura","text":"<pre><code>graph TB\n    Client[Cliente Web/Mobile] --&gt; LB[Load Balancer]\n    LB --&gt; Gateway[API Gateway]\n\n    Gateway --&gt; Auth[Servi\u00e7o de Autentica\u00e7\u00e3o]\n    Gateway --&gt; Data[Servi\u00e7o de Dados]\n    Gateway --&gt; Analytics[Servi\u00e7o de Analytics]\n    Gateway --&gt; Report[Servi\u00e7o de Relat\u00f3rios]\n\n    Auth --&gt; AuthDB[(Auth Database)]\n    Data --&gt; MainDB[(Database Principal)]\n    Analytics --&gt; CacheDB[(Cache/Redis)]\n    Report --&gt; FileStore[(File Storage)]\n\n    Data --&gt; Queue[Message Queue]\n    Queue --&gt; Worker[Background Workers]\n    Worker --&gt; MainDB\n</code></pre>"},{"location":"sobre/arquitetura/#componentes-principais","title":"\ud83d\udd27 Componentes Principais","text":""},{"location":"sobre/arquitetura/#frontend","title":"Frontend","text":"<ul> <li>Tecnologia: React/Vue.js</li> <li>Responsabilidades:</li> <li>Interface do usu\u00e1rio</li> <li>Visualiza\u00e7\u00e3o de dados</li> <li>Intera\u00e7\u00e3o com APIs</li> </ul>"},{"location":"sobre/arquitetura/#api-gateway","title":"API Gateway","text":"<ul> <li>Tecnologia: Kong/NGINX</li> <li>Responsabilidades:</li> <li>Roteamento de requisi\u00e7\u00f5es</li> <li>Autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o</li> <li>Rate limiting</li> <li>Logging centralizado</li> </ul>"},{"location":"sobre/arquitetura/#microsservicos","title":"Microsservi\u00e7os","text":""},{"location":"sobre/arquitetura/#servico-de-autenticacao","title":"Servi\u00e7o de Autentica\u00e7\u00e3o","text":"<pre><code># Estrutura b\u00e1sica\nauth/\n\u251c\u2500\u2500 models/\n\u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2514\u2500\u2500 role.py\n\u251c\u2500\u2500 services/\n\u2502   \u251c\u2500\u2500 auth_service.py\n\u2502   \u2514\u2500\u2500 jwt_service.py\n\u251c\u2500\u2500 controllers/\n\u2502   \u2514\u2500\u2500 auth_controller.py\n\u2514\u2500\u2500 middleware/\n    \u2514\u2500\u2500 auth_middleware.py\n</code></pre>"},{"location":"sobre/arquitetura/#servico-de-dados","title":"Servi\u00e7o de Dados","text":"<pre><code># Estrutura b\u00e1sica\ndata/\n\u251c\u2500\u2500 models/\n\u2502   \u251c\u2500\u2500 dataset.py\n\u2502   \u2514\u2500\u2500 schema.py\n\u251c\u2500\u2500 services/\n\u2502   \u251c\u2500\u2500 data_service.py\n\u2502   \u2514\u2500\u2500 validation_service.py\n\u251c\u2500\u2500 repositories/\n\u2502   \u2514\u2500\u2500 data_repository.py\n\u2514\u2500\u2500 processors/\n    \u2514\u2500\u2500 data_processor.py\n</code></pre>"},{"location":"sobre/arquitetura/#servico-de-analytics","title":"Servi\u00e7o de Analytics","text":"<pre><code># Estrutura b\u00e1sica\nanalytics/\n\u251c\u2500\u2500 algorithms/\n\u2502   \u251c\u2500\u2500 statistical.py\n\u2502   \u2514\u2500\u2500 ml_models.py\n\u251c\u2500\u2500 services/\n\u2502   \u2514\u2500\u2500 analytics_service.py\n\u2514\u2500\u2500 utils/\n    \u2514\u2500\u2500 data_transformer.py\n</code></pre>"},{"location":"sobre/arquitetura/#camada-de-dados","title":"\ud83d\uddc4\ufe0f Camada de Dados","text":""},{"location":"sobre/arquitetura/#banco-de-dados-principal","title":"Banco de Dados Principal","text":"<ul> <li>Tecnologia: PostgreSQL</li> <li>Uso: Dados transacionais, metadados</li> <li>Caracter\u00edsticas:</li> <li>ACID compliance</li> <li>Rela\u00e7\u00f5es complexas</li> <li>Consultas SQL avan\u00e7adas</li> </ul>"},{"location":"sobre/arquitetura/#cache-layer","title":"Cache Layer","text":"<ul> <li>Tecnologia: Redis</li> <li>Uso: Cache de consultas frequentes</li> <li>Caracter\u00edsticas:</li> <li>Alta performance</li> <li>TTL configur\u00e1vel</li> <li>Distribu\u00eddo</li> </ul>"},{"location":"sobre/arquitetura/#file-storage","title":"File Storage","text":"<ul> <li>Tecnologia: MinIO/S3</li> <li>Uso: Arquivos grandes, backups</li> <li>Caracter\u00edsticas:</li> <li>Escalabilidade horizontal</li> <li>Versionamento</li> <li>CDN integration</li> </ul>"},{"location":"sobre/arquitetura/#fluxo-de-dados","title":"\ud83d\udd04 Fluxo de Dados","text":""},{"location":"sobre/arquitetura/#1-ingestao-de-dados","title":"1. Ingest\u00e3o de Dados","text":"<pre><code>Fonte de Dados \u2192 Valida\u00e7\u00e3o \u2192 Transforma\u00e7\u00e3o \u2192 Armazenamento\n</code></pre>"},{"location":"sobre/arquitetura/#2-processamento","title":"2. Processamento","text":"<pre><code>Dados Brutos \u2192 Algoritmos \u2192 Resultados \u2192 Cache \u2192 API\n</code></pre>"},{"location":"sobre/arquitetura/#3-consulta","title":"3. Consulta","text":"<pre><code>Cliente \u2192 Gateway \u2192 Servi\u00e7o \u2192 Cache/DB \u2192 Resposta\n</code></pre>"},{"location":"sobre/arquitetura/#seguranca","title":"\ud83d\udd12 Seguran\u00e7a","text":""},{"location":"sobre/arquitetura/#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<ul> <li>JWT tokens com refresh</li> <li>OAuth 2.0 para integra\u00e7\u00e3o externa</li> <li>Multi-factor authentication (MFA)</li> </ul>"},{"location":"sobre/arquitetura/#autorizacao","title":"Autoriza\u00e7\u00e3o","text":"<ul> <li>Role-based access control (RBAC)</li> <li>Resource-level permissions</li> <li>API rate limiting</li> </ul>"},{"location":"sobre/arquitetura/#criptografia","title":"Criptografia","text":"<ul> <li>Dados em tr\u00e2nsito: TLS 1.3</li> <li>Dados em repouso: AES-256</li> <li>Chaves gerenciadas via HSM/KMS</li> </ul>"},{"location":"sobre/arquitetura/#escalabilidade","title":"\ud83d\udcc8 Escalabilidade","text":""},{"location":"sobre/arquitetura/#horizontal-scaling","title":"Horizontal Scaling","text":"<ul> <li>Microsservi\u00e7os independentes</li> <li>Load balancing autom\u00e1tico</li> <li>Auto-scaling baseado em m\u00e9tricas</li> </ul>"},{"location":"sobre/arquitetura/#vertical-scaling","title":"Vertical Scaling","text":"<ul> <li>Otimiza\u00e7\u00e3o de queries</li> <li>Indexa\u00e7\u00e3o inteligente</li> <li>Connection pooling</li> </ul>"},{"location":"sobre/arquitetura/#caching-strategy","title":"Caching Strategy","text":"<pre><code>L1: In-memory cache (aplica\u00e7\u00e3o)\nL2: Redis cluster\nL3: CDN (conte\u00fado est\u00e1tico)\n</code></pre>"},{"location":"sobre/arquitetura/#devops-e-infraestrutura","title":"\ud83d\udd27 DevOps e Infraestrutura","text":""},{"location":"sobre/arquitetura/#containerizacao","title":"Containeriza\u00e7\u00e3o","text":"<pre><code># Exemplo de Dockerfile\nFROM python:3.11-slim\n\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n\nCOPY . .\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"app:app\"]\n</code></pre>"},{"location":"sobre/arquitetura/#orquestracao","title":"Orquestra\u00e7\u00e3o","text":"<ul> <li>Kubernetes para produ\u00e7\u00e3o</li> <li>Docker Compose para desenvolvimento</li> </ul>"},{"location":"sobre/arquitetura/#cicd-pipeline","title":"CI/CD Pipeline","text":"<pre><code># .github/workflows/deploy.yml\nstages:\n  - test\n  - build\n  - security-scan\n  - deploy-staging\n  - integration-tests\n  - deploy-production\n</code></pre>"},{"location":"sobre/arquitetura/#monitoramento","title":"\ud83d\udcca Monitoramento","text":""},{"location":"sobre/arquitetura/#metricas","title":"M\u00e9tricas","text":"<ul> <li>Application Performance Monitoring (APM)</li> <li>Business metrics</li> <li>Infrastructure metrics</li> </ul>"},{"location":"sobre/arquitetura/#logging","title":"Logging","text":"<ul> <li>Structured logging (JSON)</li> <li>Centralized log aggregation</li> <li>Log retention policies</li> </ul>"},{"location":"sobre/arquitetura/#alerting","title":"Alerting","text":"<ul> <li>Proactive alerts</li> <li>SLA monitoring</li> <li>Escalation procedures</li> </ul>"},{"location":"sobre/arquitetura/#apis-e-integracoes","title":"\ud83c\udf10 APIs e Integra\u00e7\u00f5es","text":""},{"location":"sobre/arquitetura/#rest-api-design","title":"REST API Design","text":"<pre><code>GET    /api/v1/datasets          # Listar datasets\nPOST   /api/v1/datasets          # Criar dataset\nGET    /api/v1/datasets/{id}     # Obter dataset\nPUT    /api/v1/datasets/{id}     # Atualizar dataset\nDELETE /api/v1/datasets/{id}     # Deletar dataset\n</code></pre>"},{"location":"sobre/arquitetura/#graphql-futuro","title":"GraphQL (Futuro)","text":"<ul> <li>Query complexa em uma requisi\u00e7\u00e3o</li> <li>Schema type-safe</li> <li>Real-time subscriptions</li> </ul>"},{"location":"sobre/arquitetura/#webhooks","title":"Webhooks","text":"<ul> <li>Notifica\u00e7\u00f5es de eventos</li> <li>Retry mechanisms</li> <li>Signature validation</li> </ul>"},{"location":"sobre/arquitetura/#performance","title":"\ud83d\ude80 Performance","text":""},{"location":"sobre/arquitetura/#database-optimization","title":"Database Optimization","text":"<ul> <li>Query optimization</li> <li>Index strategies</li> <li>Partitioning</li> <li>Read replicas</li> </ul>"},{"location":"sobre/arquitetura/#caching","title":"Caching","text":"<ul> <li>Query result caching</li> <li>Object caching</li> <li>Page caching</li> </ul>"},{"location":"sobre/arquitetura/#cdn","title":"CDN","text":"<ul> <li>Static asset delivery</li> <li>Global distribution</li> <li>Cache invalidation</li> </ul>"},{"location":"sobre/arquitetura/#patterns-e-principios","title":"\ud83d\udccb Patterns e Princ\u00edpios","text":""},{"location":"sobre/arquitetura/#design-patterns","title":"Design Patterns","text":"<ul> <li>Repository Pattern: Abstra\u00e7\u00e3o de dados</li> <li>Factory Pattern: Cria\u00e7\u00e3o de objetos</li> <li>Observer Pattern: Eventos e notifica\u00e7\u00f5es</li> <li>Strategy Pattern: Algoritmos intercambi\u00e1veis</li> </ul>"},{"location":"sobre/arquitetura/#solid-principles","title":"SOLID Principles","text":"<ul> <li>Single Responsibility</li> <li>Open/Closed</li> <li>Liskov Substitution</li> <li>Interface Segregation</li> <li>Dependency Inversion</li> </ul>"},{"location":"sobre/arquitetura/#12-factor-app","title":"12-Factor App","text":"<ul> <li>Configura\u00e7\u00e3o via environment</li> <li>Stateless processes</li> <li>Explicit dependencies</li> </ul> <p>Para implementar esta arquitetura, consulte o Guia de Configura\u00e7\u00e3o do Ambiente.</p>"},{"location":"sobre/objetivos/","title":"Objetivos do Projeto","text":""},{"location":"sobre/objetivos/#objetivos-principais","title":"\ud83d\ude80 Objetivos Principais","text":""},{"location":"sobre/objetivos/#1-desenvolver-uma-plataforma-de-gerenciamento-de-dados","title":"1. Desenvolver uma Plataforma de Gerenciamento de Dados","text":"<ul> <li>Criar um sistema robusto para armazenamento e recupera\u00e7\u00e3o de dados</li> <li>Implementar mecanismos de backup e recupera\u00e7\u00e3o</li> <li>Garantir alta disponibilidade e performance</li> </ul>"},{"location":"sobre/objetivos/#2-implementar-ferramentas-de-analise-avancada","title":"2. Implementar Ferramentas de An\u00e1lise Avan\u00e7ada","text":"<ul> <li>Desenvolver algoritmos de an\u00e1lise estat\u00edstica</li> <li>Integrar t\u00e9cnicas de machine learning</li> <li>Criar dashboards interativos para visualiza\u00e7\u00e3o</li> </ul>"},{"location":"sobre/objetivos/#3-facilitar-a-integracao-de-sistemas","title":"3. Facilitar a Integra\u00e7\u00e3o de Sistemas","text":"<ul> <li>Desenvolver APIs RESTful para integra\u00e7\u00e3o</li> <li>Criar conectores para diferentes tipos de banco de dados</li> <li>Implementar protocolos de comunica\u00e7\u00e3o seguros</li> </ul>"},{"location":"sobre/objetivos/#objetivos-especificos","title":"\ud83c\udfaf Objetivos Espec\u00edficos","text":""},{"location":"sobre/objetivos/#curto-prazo-3-6-meses","title":"Curto Prazo (3-6 meses)","text":"<ul> <li> Definir arquitetura do sistema</li> <li> Implementar m\u00f3dulo b\u00e1sico de banco de dados</li> <li> Criar interface web inicial</li> <li> Estabelecer pipeline de CI/CD</li> </ul>"},{"location":"sobre/objetivos/#medio-prazo-6-12-meses","title":"M\u00e9dio Prazo (6-12 meses)","text":"<ul> <li> Implementar funcionalidades de an\u00e1lise de dados</li> <li> Desenvolver sistema de usu\u00e1rios e permiss\u00f5es</li> <li> Criar documenta\u00e7\u00e3o t\u00e9cnica completa</li> <li> Realizar testes de performance</li> </ul>"},{"location":"sobre/objetivos/#longo-prazo-12-meses","title":"Longo Prazo (12+ meses)","text":"<ul> <li> Implementar funcionalidades avan\u00e7adas de IA</li> <li> Criar marketplace de plugins</li> <li> Desenvolver vers\u00e3o mobile</li> <li> Expandir para m\u00faltiplas linguagens</li> </ul>"},{"location":"sobre/objetivos/#metricas-de-sucesso","title":"\ud83d\udcca M\u00e9tricas de Sucesso","text":""},{"location":"sobre/objetivos/#performance","title":"Performance","text":"<ul> <li>Tempo de resposta &lt; 200ms para consultas simples</li> <li>Capacidade de processar 10.000+ consultas simult\u00e2neas</li> <li>Disponibilidade de 99.9%</li> </ul>"},{"location":"sobre/objetivos/#usabilidade","title":"Usabilidade","text":"<ul> <li>Interface intuitiva para usu\u00e1rios n\u00e3o t\u00e9cnicos</li> <li>Tempo de aprendizado &lt; 2 horas para funcionalidades b\u00e1sicas</li> <li>Satisfa\u00e7\u00e3o do usu\u00e1rio &gt; 4.5/5</li> </ul>"},{"location":"sobre/objetivos/#desenvolvimento","title":"Desenvolvimento","text":"<ul> <li>Cobertura de testes &gt; 80%</li> <li>Documenta\u00e7\u00e3o atualizada em 100% das funcionalidades</li> <li>Time-to-market &lt; 6 meses para novas features</li> </ul>"},{"location":"sobre/objetivos/#impacto-esperado","title":"\ud83c\udf1f Impacto Esperado","text":""},{"location":"sobre/objetivos/#na-comunidade-academica","title":"Na Comunidade Acad\u00eamica","text":"<ul> <li>Facilita\u00e7\u00e3o de pesquisas que dependem de an\u00e1lise de dados</li> <li>Publica\u00e7\u00e3o de artigos cient\u00edficos sobre as solu\u00e7\u00f5es desenvolvidas</li> <li>Cria\u00e7\u00e3o de material did\u00e1tico para ensino de banco de dados</li> </ul>"},{"location":"sobre/objetivos/#na-industria","title":"Na Ind\u00fastria","text":"<ul> <li>Redu\u00e7\u00e3o de custos com ferramentas de an\u00e1lise de dados</li> <li>Melhoria na tomada de decis\u00f5es baseadas em dados</li> <li>Democratiza\u00e7\u00e3o do acesso a ferramentas avan\u00e7adas de an\u00e1lise</li> </ul> <p>Para entender como estes objetivos se traduzem em arquitetura t\u00e9cnica, consulte a se\u00e7\u00e3o Arquitetura.</p>"},{"location":"sobre/visao-geral/","title":"Vis\u00e3o Geral do Projeto","text":""},{"location":"sobre/visao-geral/#introducao","title":"\ud83d\udccb Introdu\u00e7\u00e3o","text":"<p>O projeto UBC Lab BD \u00e9 uma iniciativa de pesquisa e desenvolvimento focada em criar solu\u00e7\u00f5es inovadoras na \u00e1rea de banco de dados e an\u00e1lise de dados. Este projeto surge da necessidade de desenvolver ferramentas que possam lidar com os desafios modernos de gerenciamento e an\u00e1lise de grandes volumes de dados.</p>"},{"location":"sobre/visao-geral/#proposito","title":"\ud83c\udfaf Prop\u00f3sito","text":"<p>O projeto tem como prop\u00f3sito principal:</p> <ul> <li>Desenvolver solu\u00e7\u00f5es eficientes para gerenciamento de banco de dados</li> <li>Criar ferramentas de an\u00e1lise de dados de alta performance</li> <li>Proporcionar interfaces intuitivas para intera\u00e7\u00e3o com dados</li> <li>Facilitar a integra\u00e7\u00e3o entre diferentes sistemas de dados</li> </ul>"},{"location":"sobre/visao-geral/#escopo","title":"\ud83d\udd0d Escopo","text":""},{"location":"sobre/visao-geral/#funcionalidades-principais","title":"Funcionalidades Principais","text":"<ul> <li>Gerenciamento de Dados: Sistemas para armazenamento, recupera\u00e7\u00e3o e manipula\u00e7\u00e3o de dados</li> <li>An\u00e1lise de Dados: Ferramentas para processamento e an\u00e1lise estat\u00edstica</li> <li>Visualiza\u00e7\u00e3o: Interfaces para visualiza\u00e7\u00e3o de dados e resultados</li> <li>Integra\u00e7\u00e3o: APIs e conectores para integra\u00e7\u00e3o com outros sistemas</li> </ul>"},{"location":"sobre/visao-geral/#tecnologias-envolvidas","title":"Tecnologias Envolvidas","text":"<ul> <li>Banco de dados relacionais e n\u00e3o relacionais</li> <li>Ferramentas de Big Data</li> <li>Algoritmos de machine learning</li> <li>Tecnologias web modernas</li> </ul>"},{"location":"sobre/visao-geral/#contexto-academico","title":"\ud83c\udfdb\ufe0f Contexto Acad\u00eamico","text":"<p>Este projeto est\u00e1 sendo desenvolvido no contexto do UBC Lab (Universidade do Contexto de Banco de Dados), combinando:</p> <ul> <li>Pesquisa Acad\u00eamica: Aplica\u00e7\u00e3o de teorias e metodologias cient\u00edficas</li> <li>Desenvolvimento Pr\u00e1tico: Implementa\u00e7\u00e3o de solu\u00e7\u00f5es reais</li> <li>Inova\u00e7\u00e3o Tecnol\u00f3gica: Explora\u00e7\u00e3o de novas abordagens e tecnologias</li> </ul>"},{"location":"sobre/visao-geral/#beneficios-esperados","title":"\ud83d\udcca Benef\u00edcios Esperados","text":"<ul> <li>Melhoria na efici\u00eancia de processamento de dados</li> <li>Redu\u00e7\u00e3o de tempo para an\u00e1lises complexas</li> <li>Interface mais amig\u00e1vel para usu\u00e1rios n\u00e3o t\u00e9cnicos</li> <li>Melhor integra\u00e7\u00e3o entre diferentes fontes de dados</li> </ul> <p>Para mais detalhes sobre os objetivos espec\u00edficos, consulte a se\u00e7\u00e3o Objetivos.</p>"}]}